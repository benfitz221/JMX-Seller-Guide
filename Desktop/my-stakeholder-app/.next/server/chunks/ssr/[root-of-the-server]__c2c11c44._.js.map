{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ben/Desktop/my-stakeholder-app/src/components/CareerStakeholderMatrix.tsx"],"sourcesContent":["\"use client\";\r\nimport React, { useState, useEffect, useMemo } from \"react\";\r\nimport {\r\n  Users,\r\n  Plus,\r\n  Search,\r\n  Filter,\r\n  Download,\r\n  Eye,\r\n  Edit,\r\n  Trash2,\r\n  Star,\r\n  Building,\r\n  User,\r\n  TrendingUp,\r\n  Target,\r\n  Clock,\r\n  MapPin,\r\n  Network,\r\n  BarChart3,\r\n  Settings,\r\n  HelpCircle,\r\n} from \"lucide-react\";\r\nimport {\r\n  ScatterChart,\r\n  Scatter,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n  Cell,\r\n  PieChart,\r\n  Pie,\r\n  BarChart,\r\n  Bar,\r\n} from \"recharts\";\r\n\r\ninterface Stakeholder {\r\n  id: string;\r\n  name: string;\r\n  organization: string;\r\n  position: string;\r\n  email: string;\r\n  phone: string;\r\n  careerInfluence: number; // 1-10: Their power to affect your career trajectory\r\n  relationshipSupport: number; // 1-10: How supportive they are (1=actively opposed, 5=neutral, 10=strong champion)\r\n  engagementDifficulty: number; // 1-10: How hard they are to reach/maintain relationship with (1=very accessible, 10=very difficult)\r\n  relationship: \"ally\" | \"neutral\" | \"opponent\" | \"unknown\";\r\n  category:\r\n    | \"internal\"\r\n    | \"external\"\r\n    | \"client\"\r\n    | \"vendor\"\r\n    | \"government\"\r\n    | \"media\"\r\n    | \"community\";\r\n  stakeholderType:\r\n    | \"power_broker\"\r\n    | \"decision_maker\"\r\n    | \"influencer\"\r\n    | \"gatekeeper\"\r\n    | \"champion\"\r\n    | \"analyst\"\r\n    | \"connector\";\r\n  engagementFrequency:\r\n    | \"weekly\"\r\n    | \"monthly\"\r\n    | \"quarterly\"\r\n    | \"annually\"\r\n    | \"as_needed\";\r\n  lastContact: string;\r\n  coreInterests: string[];\r\n  potentialOutcomes: string[];\r\n  notes: string;\r\n  location: string;\r\n  connections: string[]; // IDs of connected stakeholders\r\n}\r\n\r\n// Metric definitions for UI/UX guidance\r\nconst metricDefinitions = {\r\n  careerInfluence: {\r\n    label: \"Career Influence\",\r\n    description: \"Their power to affect your career trajectory\",\r\n    scale: {\r\n      low: \"1-3: Limited influence on career decisions\",\r\n      medium: \"4-7: Moderate influence, can provide opportunities\",\r\n      high: \"8-10: Significant power over career outcomes\"\r\n    }\r\n  },\r\n  relationshipSupport: {\r\n    label: \"Relationship Support\", \r\n    description: \"How supportive they are of your career goals\",\r\n    scale: {\r\n      low: \"1-3: Actively opposed or blocking your progress\",\r\n      medium: \"4-7: Neutral or mixed support\",\r\n      high: \"8-10: Strong champion and advocate\"\r\n    }\r\n  },\r\n  engagementDifficulty: {\r\n    label: \"Engagement Difficulty\",\r\n    description: \"How hard they are to reach and maintain relationship with\",\r\n    scale: {\r\n      low: \"1-3: Very accessible, easy to engage\",\r\n      medium: \"4-7: Moderate effort required\",\r\n      high: \"8-10: Very difficult to reach or maintain contact\"\r\n    }\r\n  }\r\n} as const;\r\n\r\nconst CareerStakeholderMatrix: React.FC = () => {\r\n  const [stakeholders, setStakeholders] = useState<Stakeholder[]>([]);\r\n  const [selectedStakeholder, setSelectedStakeholder] =\r\n    useState<Stakeholder | null>(null);\r\n  const [isAddingStakeholder, setIsAddingStakeholder] = useState(false);\r\n  const [isEditingStakeholder, setIsEditingStakeholder] = useState(false);\r\n  const [stakeholderToDelete, setStakeholderToDelete] =\r\n    useState<Stakeholder | null>(null);\r\n  const [showTypeGuide, setShowTypeGuide] = useState(false);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [filterCategory, setFilterCategory] = useState<string>(\"all\");\r\n  const [filterType, setFilterType] = useState<string>(\"all\");\r\n  const [viewMode, setViewMode] = useState<\"matrix\" | \"network\" | \"analytics\">(\r\n    \"matrix\"\r\n  );\r\n  const [matrixView, setMatrixView] = useState<\r\n    \"influence-support\" | \"influence-difficulty\"\r\n  >(\"influence-support\");\r\n\r\n  // Stakeholder type definitions for career planning\r\n  const stakeholderTypeDefinitions = {\r\n    power_broker: {\r\n      title: \"Power Broker\",\r\n      description:\r\n        \"Individuals with significant influence who can broker deals, open doors, and make strategic introductions. They often operate behind the scenes and have extensive networks.\",\r\n      characteristics: [\r\n        \"Extensive network connections\",\r\n        \"Ability to influence key decisions\",\r\n        \"Often consulted by senior leadership\",\r\n        \"Can facilitate introductions and opportunities\",\r\n      ],\r\n      examples: [\r\n        \"Senior executives\",\r\n        \"Board members\",\r\n        \"Industry veterans\",\r\n        \"Well-connected consultants\",\r\n      ],\r\n      icon: \"⭐\",\r\n      color: \"#f59e0b\",\r\n    },\r\n    decision_maker: {\r\n      title: \"Decision Maker\",\r\n      description:\r\n        \"People with direct authority to make hiring, promotion, budget, or strategic decisions that directly impact your career trajectory.\",\r\n      characteristics: [\r\n        \"Direct decision-making authority\",\r\n        \"Budget control\",\r\n        \"Hiring/promotion power\",\r\n        \"Strategic planning involvement\",\r\n      ],\r\n      examples: [\r\n        \"Your boss\",\r\n        \"VP/Director level\",\r\n        \"CEO/C-suite\",\r\n        \"Department heads\",\r\n      ],\r\n      icon: \"🎯\",\r\n      color: \"#ef4444\",\r\n    },\r\n    influencer: {\r\n      title: \"Influencer\",\r\n      description:\r\n        \"Respected professionals whose opinions carry weight. They may not have formal authority but their recommendations and endorsements significantly impact decisions.\",\r\n      characteristics: [\r\n        \"Industry reputation\",\r\n        \"Thought leadership\",\r\n        \"Respected expertise\",\r\n        \"Strong professional brand\",\r\n      ],\r\n      examples: [\r\n        \"Industry experts\",\r\n        \"Conference speakers\",\r\n        \"Published authors\",\r\n        \"Award winners\",\r\n      ],\r\n      icon: \"📈\",\r\n      color: \"#8b5cf6\",\r\n    },\r\n    gatekeeper: {\r\n      title: \"Gatekeeper\",\r\n      description:\r\n        \"Individuals who control access to opportunities, information, or key people. They often filter who gets through to decision makers.\",\r\n      characteristics: [\r\n        \"Controls access to resources\",\r\n        \"Information filtering role\",\r\n        \"Relationship with decision makers\",\r\n        \"Process ownership\",\r\n      ],\r\n      examples: [\r\n        \"Executive assistants\",\r\n        \"HR managers\",\r\n        \"Recruiters\",\r\n        \"Project managers\",\r\n      ],\r\n      icon: \"🏢\",\r\n      color: \"#06b6d4\",\r\n    },\r\n    champion: {\r\n      title: \"Champion\",\r\n      description:\r\n        \"Strong advocates who actively promote your interests, speak positively about your work, and support your career advancement.\",\r\n      characteristics: [\r\n        \"Active advocacy\",\r\n        \"Positive reputation building\",\r\n        \"Willing to recommend\",\r\n        \"Invested in your success\",\r\n      ],\r\n      examples: [\r\n        \"Mentors\",\r\n        \"Supportive colleagues\",\r\n        \"Former managers\",\r\n        \"Satisfied clients\",\r\n      ],\r\n      icon: \"👥\",\r\n      color: \"#10b981\",\r\n    },\r\n    analyst: {\r\n      title: \"Analyst\",\r\n      description:\r\n        \"Individuals who evaluate performance, assess capabilities, or provide technical expertise that influences career-related decisions.\",\r\n      characteristics: [\r\n        \"Technical evaluation role\",\r\n        \"Performance assessment\",\r\n        \"Subject matter expertise\",\r\n        \"Advisory capacity\",\r\n      ],\r\n      examples: [\r\n        \"Technical reviewers\",\r\n        \"Performance evaluators\",\r\n        \"Consultants\",\r\n        \"Peer reviewers\",\r\n      ],\r\n      icon: \"📊\",\r\n      color: \"#6366f1\",\r\n    },\r\n    connector: {\r\n      title: \"Connector\",\r\n      description:\r\n        \"Well-networked individuals who excel at making introductions and connecting people across industries, organizations, or functional areas.\",\r\n      characteristics: [\r\n        \"Extensive professional network\",\r\n        \"Relationship building skills\",\r\n        \"Cross-industry connections\",\r\n        \"Introduction facilitation\",\r\n      ],\r\n      examples: [\r\n        \"Industry association leaders\",\r\n        \"Conference organizers\",\r\n        \"Alumni network leaders\",\r\n        \"Professional group heads\",\r\n      ],\r\n      icon: \"🔗\",\r\n      color: \"#84cc16\",\r\n    },\r\n  };\r\n\r\n  // Sample data - Energy sector stakeholders relevant to Dr. Veda's career\r\n  useEffect(() => {\r\n    const sampleStakeholders: Stakeholder[] = [\r\n      {\r\n        id: \"1\",\r\n        name: \"Jennifer Martinez\",\r\n        organization: \"Dominion Energy\",\r\n        position: \"VP Grid Technology\",\r\n        email: \"jennifer.martinez@dominionenergy.com\",\r\n        phone: \"804-555-0123\",\r\n        careerInfluence: 10,\r\n        relationshipSupport: 8,\r\n        engagementDifficulty: 3,\r\n        relationship: \"ally\",\r\n        category: \"internal\",\r\n        stakeholderType: \"power_broker\",\r\n        engagementFrequency: \"weekly\",\r\n        lastContact: \"2024-06-18\",\r\n        coreInterests: [\r\n          \"Grid modernization\",\r\n          \"DERMS implementation\",\r\n          \"Technology innovation\",\r\n          \"Regulatory compliance\",\r\n        ],\r\n        potentialOutcomes: [\r\n          \"Budget approval\",\r\n          \"Team expansion\",\r\n          \"Strategic project leadership\",\r\n          \"Promotion opportunities\",\r\n        ],\r\n        notes:\r\n          \"Direct sponsor and key advocate. Strong supporter of DERMS and cloud-based solutions. Critical for career advancement.\",\r\n        location: \"Richmond, VA\",\r\n        connections: [\"2\", \"5\"],\r\n      },\r\n      {\r\n        id: \"2\",\r\n        name: \"Dr. Michael Chen\",\r\n        organization: \"U.S. Department of Energy\",\r\n        position: \"Director, Grid Modernization Office\",\r\n        email: \"michael.chen@doe.gov\",\r\n        phone: \"202-555-0456\",\r\n        careerInfluence: 9,\r\n        relationshipSupport: 9,\r\n        engagementDifficulty: 7,\r\n        relationship: \"ally\",\r\n        category: \"government\",\r\n        stakeholderType: \"decision_maker\",\r\n        engagementFrequency: \"quarterly\",\r\n        lastContact: \"2024-05-15\",\r\n        coreInterests: [\r\n          \"Grid modernization\",\r\n          \"Clean energy integration\",\r\n          \"Research funding\",\r\n          \"National energy security\",\r\n        ],\r\n        potentialOutcomes: [\r\n          \"Future DOE funding\",\r\n          \"Industry recognition\",\r\n          \"Policy influence\",\r\n          \"Advisory roles\",\r\n        ],\r\n        notes:\r\n          \"Awarded $16.8M for GRID-FLEXER project. Key relationship for federal funding and energy policy influence.\",\r\n        location: \"Washington, DC\",\r\n        connections: [\"1\", \"3\", \"4\"],\r\n      },\r\n      {\r\n        id: \"3\",\r\n        name: \"Sarah Kim\",\r\n        organization: \"NVIDIA Corporation\",\r\n        position: \"Director, Energy Sector Solutions\",\r\n        email: \"sarah.kim@nvidia.com\",\r\n        phone: \"408-555-0789\",\r\n        careerInfluence: 8,\r\n        relationshipSupport: 7,\r\n        engagementDifficulty: 5,\r\n        relationship: \"ally\",\r\n        category: \"external\",\r\n        stakeholderType: \"connector\",\r\n        engagementFrequency: \"monthly\",\r\n        lastContact: \"2024-06-01\",\r\n        coreInterests: [\r\n          \"AI in energy\",\r\n          \"Grid computing\",\r\n          \"Technology partnerships\",\r\n          \"Market expansion\",\r\n        ],\r\n        potentialOutcomes: [\r\n          \"Technology partnerships\",\r\n          \"Industry opportunities\",\r\n          \"Thought leadership\",\r\n          \"Executive roles\",\r\n        ],\r\n        notes:\r\n          \"Connected through NREL Utilidata partnership. Strong industry advocate who offered competitive package.\",\r\n        location: \"Santa Clara, CA\",\r\n        connections: [\"2\", \"4\", \"6\"],\r\n      },\r\n      {\r\n        id: \"4\",\r\n        name: \"Josh Walker\",\r\n        organization: \"Utilidata Inc.\",\r\n        position: \"CEO & Co-Founder\",\r\n        email: \"josh.walker@utilidata.com\",\r\n        phone: \"401-555-0321\",\r\n        careerInfluence: 7,\r\n        relationshipSupport: 9,\r\n        engagementDifficulty: 4,\r\n        relationship: \"ally\",\r\n        category: \"external\",\r\n        stakeholderType: \"influencer\",\r\n        engagementFrequency: \"monthly\",\r\n        lastContact: \"2024-05-28\",\r\n        coreInterests: [\r\n          \"Smart grid technology\",\r\n          \"DER integration\",\r\n          \"Utility partnerships\",\r\n          \"Innovation scaling\",\r\n        ],\r\n        potentialOutcomes: [\r\n          \"Advisory positions\",\r\n          \"Technology insights\",\r\n          \"Startup connections\",\r\n          \"Industry credibility\",\r\n        ],\r\n        notes:\r\n          \"Facilitated NVIDIA partnership at NREL. Values expertise in utility needs and technology validation.\",\r\n        location: \"Providence, RI\",\r\n        connections: [\"2\", \"3\", \"7\"],\r\n      },\r\n      {\r\n        id: \"5\",\r\n        name: \"Robert Thompson\",\r\n        organization: \"Dominion Energy\",\r\n        position: \"VP Grid Operations\",\r\n        email: \"robert.thompson@dominionenergy.com\",\r\n        phone: \"804-555-0654\",\r\n        careerInfluence: 9,\r\n        relationshipSupport: 6,\r\n        engagementDifficulty: 7,\r\n        relationship: \"neutral\",\r\n        category: \"internal\",\r\n        stakeholderType: \"decision_maker\",\r\n        engagementFrequency: \"monthly\",\r\n        lastContact: \"2024-06-10\",\r\n        coreInterests: [\r\n          \"Grid reliability\",\r\n          \"Operational efficiency\",\r\n          \"Technology integration\",\r\n          \"Risk management\",\r\n        ],\r\n        potentialOutcomes: [\r\n          \"Operational support\",\r\n          \"Cross-functional collaboration\",\r\n          \"Technology adoption\",\r\n          \"Executive visibility\",\r\n        ],\r\n        notes:\r\n          \"Key stakeholder for DERMS operations. Initially skeptical of cloud solutions but warming to benefits.\",\r\n        location: \"Richmond, VA\",\r\n        connections: [\"1\", \"8\"],\r\n      },\r\n      {\r\n        id: \"6\",\r\n        name: \"Dr. Amanda Foster\",\r\n        organization: \"National Renewable Energy Laboratory\",\r\n        position: \"Group Manager, Grid Integration\",\r\n        email: \"amanda.foster@nrel.gov\",\r\n        phone: \"303-555-0987\",\r\n        careerInfluence: 6,\r\n        relationshipSupport: 9,\r\n        engagementDifficulty: 3,\r\n        relationship: \"ally\",\r\n        category: \"external\",\r\n        stakeholderType: \"champion\",\r\n        engagementFrequency: \"quarterly\",\r\n        lastContact: \"2024-04-20\",\r\n        coreInterests: [\r\n          \"Grid research\",\r\n          \"Technology validation\",\r\n          \"Industry collaboration\",\r\n          \"Knowledge transfer\",\r\n        ],\r\n        potentialOutcomes: [\r\n          \"Research partnerships\",\r\n          \"Academic credibility\",\r\n          \"Industry publications\",\r\n          \"Conference speaking\",\r\n        ],\r\n        notes:\r\n          \"Former colleague who provides ongoing research insights and industry connections.\",\r\n        location: \"Golden, CO\",\r\n        connections: [\"2\", \"3\", \"4\"],\r\n      },\r\n      {\r\n        id: \"7\",\r\n        name: \"Maria Rodriguez\",\r\n        organization: \"Virginia State Corporation Commission\",\r\n        position: \"Director, Energy Regulation\",\r\n        email: \"maria.rodriguez@scc.virginia.gov\",\r\n        phone: \"804-555-0246\",\r\n        careerInfluence: 8,\r\n        relationshipSupport: 5,\r\n        engagementDifficulty: 8,\r\n        relationship: \"neutral\",\r\n        category: \"government\",\r\n        stakeholderType: \"gatekeeper\",\r\n        engagementFrequency: \"as_needed\",\r\n        lastContact: \"2024-03-15\",\r\n        coreInterests: [\r\n          \"Regulatory compliance\",\r\n          \"Consumer protection\",\r\n          \"Grid modernization\",\r\n          \"Rate justification\",\r\n        ],\r\n        potentialOutcomes: [\r\n          \"Regulatory approval\",\r\n          \"Policy influence\",\r\n          \"Industry reputation\",\r\n          \"Compliance guidance\",\r\n        ],\r\n        notes:\r\n          \"Critical for DERMS regulatory approval. Relationship needs strengthening for future initiatives.\",\r\n        location: \"Richmond, VA\",\r\n        connections: [\"1\", \"5\"],\r\n      },\r\n      {\r\n        id: \"8\",\r\n        name: \"David Park\",\r\n        organization: \"Dominion Energy\",\r\n        position: \"General Manager, Customer Programs\",\r\n        email: \"david.park@dominionenergy.com\",\r\n        phone: \"804-555-0135\",\r\n        careerInfluence: 7,\r\n        relationshipSupport: 8,\r\n        engagementDifficulty: 4,\r\n        relationship: \"ally\",\r\n        category: \"internal\",\r\n        stakeholderType: \"decision_maker\",\r\n        engagementFrequency: \"monthly\",\r\n        lastContact: \"2024-06-12\",\r\n        coreInterests: [\r\n          \"Customer engagement\",\r\n          \"DER adoption\",\r\n          \"Program effectiveness\",\r\n          \"Technology integration\",\r\n        ],\r\n        potentialOutcomes: [\r\n          \"Program collaboration\",\r\n          \"Customer insights\",\r\n          \"Technology deployment\",\r\n          \"Executive support\",\r\n        ],\r\n        notes:\r\n          \"Strong collaborator on customer-facing DER programs. Appreciates technology expertise and practical solutions.\",\r\n        location: \"Richmond, VA\",\r\n        connections: [\"1\", \"5\"],\r\n      },\r\n    ];\r\n    setStakeholders(sampleStakeholders);\r\n  }, []);\r\n\r\n  const filteredStakeholders = useMemo(() => {\r\n    return stakeholders.filter((stakeholder) => {\r\n      const matchesSearch =\r\n        stakeholder.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        stakeholder.organization\r\n          .toLowerCase()\r\n          .includes(searchTerm.toLowerCase()) ||\r\n        stakeholder.position.toLowerCase().includes(searchTerm.toLowerCase());\r\n\r\n      const matchesCategory =\r\n        filterCategory === \"all\" || stakeholder.category === filterCategory;\r\n      const matchesType =\r\n        filterType === \"all\" || stakeholder.stakeholderType === filterType;\r\n\r\n      return matchesSearch && matchesCategory && matchesType;\r\n    });\r\n  }, [stakeholders, searchTerm, filterCategory, filterType]);\r\n\r\n  const getMatrixData = () => {\r\n    switch (matrixView) {\r\n      case \"influence-support\":\r\n        return filteredStakeholders.map((s) => ({\r\n          ...s,\r\n          x: s.careerInfluence,\r\n          y: s.relationshipSupport,\r\n        }));\r\n      case \"influence-difficulty\":\r\n        return filteredStakeholders.map((s) => ({\r\n          ...s,\r\n          x: s.careerInfluence,\r\n          y: s.engagementDifficulty,\r\n        }));\r\n      default:\r\n        return filteredStakeholders.map((s) => ({\r\n          ...s,\r\n          x: s.careerInfluence,\r\n          y: s.relationshipSupport,\r\n        }));\r\n    }\r\n  };\r\n\r\n  const getQuadrantLabel = (quadrant: number) => {\r\n    switch (matrixView) {\r\n      case \"influence-support\":\r\n        switch (quadrant) {\r\n          case 1:\r\n            return \"Key Champions\";\r\n          case 2:\r\n            return \"Cultivate Support\";\r\n          case 3:\r\n            return \"Monitor\";\r\n          case 4:\r\n            return \"Address Opposition\";\r\n          default:\r\n            return \"\";\r\n        }\r\n      case \"influence-difficulty\":\r\n        switch (quadrant) {\r\n          case 1:\r\n            return \"High-Value Targets\";\r\n          case 2:\r\n            return \"Strategic Investment\";\r\n          case 3:\r\n            return \"Easy Wins\";\r\n          case 4:\r\n            return \"Low Priority\";\r\n          default:\r\n            return \"\";\r\n        }\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  const getCategoryColor = (category: string) => {\r\n    const colors = {\r\n      internal: \"#3b82f6\",\r\n      external: \"#10b981\",\r\n      client: \"#f59e0b\",\r\n      vendor: \"#8b5cf6\",\r\n      government: \"#ef4444\",\r\n      media: \"#06b6d4\",\r\n      community: \"#84cc16\",\r\n    };\r\n    return colors[category as keyof typeof colors] || \"#6b7280\";\r\n  };\r\n\r\n  const handleDeleteStakeholder = (stakeholder: Stakeholder) => {\r\n    setStakeholderToDelete(stakeholder);\r\n  };\r\n\r\n  const confirmDelete = () => {\r\n    if (stakeholderToDelete) {\r\n      setStakeholders((prev) =>\r\n        prev.filter((s) => s.id !== stakeholderToDelete.id)\r\n      );\r\n      setStakeholderToDelete(null);\r\n      setSelectedStakeholder(null);\r\n    }\r\n  };\r\n\r\n  const handleEditStakeholder = (stakeholder: Stakeholder) => {\r\n    setSelectedStakeholder(stakeholder);\r\n    setIsEditingStakeholder(true);\r\n  };\r\n\r\n  const handleSaveStakeholder = (stakeholder: Stakeholder) => {\r\n    if (isEditingStakeholder) {\r\n      setStakeholders((prev) =>\r\n        prev.map((s) => (s.id === stakeholder.id ? stakeholder : s))\r\n      );\r\n    } else {\r\n      setStakeholders((prev) => [...prev, stakeholder]);\r\n    }\r\n    setIsAddingStakeholder(false);\r\n    setIsEditingStakeholder(false);\r\n    setSelectedStakeholder(null);\r\n  };\r\n\r\n  const handleCancelForm = () => {\r\n    setIsAddingStakeholder(false);\r\n    setIsEditingStakeholder(false);\r\n    setSelectedStakeholder(null);\r\n  };\r\n\r\n  const getTypeIcon = (type: string) => {\r\n    const iconMap = {\r\n      power_broker: <Star className=\"w-4 h-4\" />,\r\n      decision_maker: <Target className=\"w-4 h-4\" />,\r\n      influencer: <TrendingUp className=\"w-4 h-4\" />,\r\n      gatekeeper: <Building className=\"w-4 h-4\" />,\r\n      champion: <Users className=\"w-4 h-4\" />,\r\n      analyst: <BarChart3 className=\"w-4 h-4\" />,\r\n      connector: <Network className=\"w-4 h-4\" />,\r\n    };\r\n    return (\r\n      iconMap[type as keyof typeof iconMap] || <User className=\"w-4 h-4\" />\r\n    );\r\n  };\r\n\r\n  const getTypeColor = (type: string) => {\r\n    return (\r\n      stakeholderTypeDefinitions[\r\n        type as keyof typeof stakeholderTypeDefinitions\r\n      ]?.color || \"#6b7280\"\r\n    );\r\n  };\r\n\r\n  // Interactive Network Visualization Component\r\n  const NetworkView = () => {\r\n    const [dimensions] = useState({ width: 800, height: 600 });\r\n    const [hoveredNode, setHoveredNode] = useState<string | null>(null);\r\n\r\n    // Create nodes and links data structure\r\n    const networkData = useMemo(() => {\r\n      const nodes = filteredStakeholders.map((stakeholder, index) => ({\r\n        id: stakeholder.id,\r\n        name: stakeholder.name,\r\n        organization: stakeholder.organization,\r\n        type: stakeholder.stakeholderType,\r\n        careerInfluence: stakeholder.careerInfluence,\r\n        relationshipSupport: stakeholder.relationshipSupport,\r\n        engagementDifficulty: stakeholder.engagementDifficulty,\r\n        category: stakeholder.category,\r\n        relationship: stakeholder.relationship,\r\n        x: 100 + (index % 4) * 150 + Math.random() * 50,\r\n        y: 100 + Math.floor(index / 4) * 120 + Math.random() * 50,\r\n      }));\r\n\r\n      const links: any[] = [];\r\n      filteredStakeholders.forEach(stakeholder => {\r\n        stakeholder.connections.forEach(connectionId => {\r\n          const targetNode = nodes.find(n => n.id === connectionId);\r\n          if (targetNode) {\r\n            links.push({\r\n              source: stakeholder.id,\r\n              target: connectionId,\r\n              strength: Math.random() * 0.5 + 0.5 // Random strength for demo\r\n            });\r\n          }\r\n        });\r\n      });\r\n\r\n      return { nodes, links };\r\n    }, [filteredStakeholders]);\r\n\r\n    // Simple force simulation using useEffect\r\n    useEffect(() => {\r\n      let animationId: number;\r\n      const simulate = () => {\r\n        // Simple force-directed positioning\r\n        networkData.nodes.forEach((node, i) => {\r\n          let fx = 0, fy = 0;\r\n          \r\n          // Repulsion between nodes\r\n          networkData.nodes.forEach((other, j) => {\r\n            if (i !== j) {\r\n              const dx = node.x - other.x;\r\n              const dy = node.y - other.y;\r\n              const distance = Math.sqrt(dx * dx + dy * dy) || 1;\r\n              const force = 2000 / (distance * distance);\r\n              fx += (dx / distance) * force;\r\n              fy += (dy / distance) * force;\r\n            }\r\n          });\r\n\r\n          // Attraction to center\r\n          const centerX = dimensions.width / 2;\r\n          const centerY = dimensions.height / 2;\r\n          const toCenterX = (centerX - node.x) * 0.001;\r\n          const toCenterY = (centerY - node.y) * 0.001;\r\n          fx += toCenterX;\r\n          fy += toCenterY;\r\n\r\n          // Apply forces with damping\r\n          node.x += fx * 0.1;\r\n          node.y += fy * 0.1;\r\n\r\n          // Boundary constraints\r\n          node.x = Math.max(50, Math.min(dimensions.width - 50, node.x));\r\n          node.y = Math.max(50, Math.min(dimensions.height - 50, node.y));\r\n        });\r\n\r\n        animationId = requestAnimationFrame(simulate);\r\n      };\r\n\r\n      const timer = setTimeout(() => {\r\n        simulate();\r\n        setTimeout(() => cancelAnimationFrame(animationId), 3000); // Stop after 3 seconds\r\n      }, 100);\r\n\r\n      return () => {\r\n        clearTimeout(timer);\r\n        if (animationId) cancelAnimationFrame(animationId);\r\n      };\r\n    }, [networkData, dimensions]);\r\n\r\n    const getNodeRadius = (careerInfluence: number) => {\r\n      return Math.max(8, careerInfluence * 3 + 10);\r\n    };\r\n\r\n    const getRelationshipColor = (relationship: string) => {\r\n      switch (relationship) {\r\n        case 'ally': return '#10b981';\r\n        case 'opponent': return '#ef4444';\r\n        case 'neutral': return '#6b7280';\r\n        default: return '#f59e0b';\r\n      }\r\n    };\r\n\r\n    const getLinkColor = (sourceNode: any, targetNode: any) => {\r\n      if (sourceNode.relationship === 'ally' && targetNode.relationship === 'ally') {\r\n        return '#10b981';\r\n      }\r\n      return '#94a3b8';\r\n    };\r\n\r\n    const networkStats = useMemo(() => {\r\n      const totalConnections = networkData.links.length;\r\n      const avgConnections = filteredStakeholders.length > 0 ? \r\n        (totalConnections * 2) / filteredStakeholders.length : 0;\r\n      \r\n      const mostConnected = filteredStakeholders.reduce((max, current) => \r\n        current.connections.length > max.connections.length ? current : max, \r\n        filteredStakeholders[0] || { name: 'N/A', connections: [] }\r\n      );\r\n\r\n      const influenceDistribution = filteredStakeholders.reduce((acc, s) => {\r\n        const tier = s.careerInfluence >= 8 ? 'high' : s.careerInfluence >= 6 ? 'medium' : 'low';\r\n        acc[tier] = (acc[tier] || 0) + 1;\r\n        return acc;\r\n      }, {} as Record<string, number>);\r\n\r\n      return {\r\n        totalConnections,\r\n        avgConnections: Math.round(avgConnections * 10) / 10,\r\n        mostConnected: mostConnected.name,\r\n        highInfluence: influenceDistribution.high || 0,\r\n        clusters: Math.ceil(filteredStakeholders.length / 3) // Simplified cluster estimation\r\n      };\r\n    }, [filteredStakeholders, networkData]);\r\n\r\n    return (\r\n      <div className=\"space-y-6\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <h2 className=\"text-lg font-semibold\">Network Visualization</h2>\r\n          <div className=\"text-sm text-gray-600\">\r\n            {filteredStakeholders.length} nodes, {networkData.links.length} connections\r\n          </div>\r\n        </div>\r\n\r\n        {/* Network Statistics */}\r\n        <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 mb-4\">\r\n          <div className=\"bg-blue-50 p-3 rounded-lg\">\r\n            <div className=\"text-2xl font-bold text-blue-600\">{networkStats.totalConnections}</div>\r\n            <div className=\"text-sm text-blue-700\">Total Connections</div>\r\n          </div>\r\n          <div className=\"bg-green-50 p-3 rounded-lg\">\r\n            <div className=\"text-2xl font-bold text-green-600\">{networkStats.avgConnections}</div>\r\n            <div className=\"text-sm text-green-700\">Avg per Person</div>\r\n          </div>\r\n          <div className=\"bg-purple-50 p-3 rounded-lg\">\r\n            <div className=\"text-2xl font-bold text-purple-600\">{networkStats.highInfluence}</div>\r\n            <div className=\"text-sm text-purple-700\">High Influence</div>\r\n          </div>\r\n          <div className=\"bg-orange-50 p-3 rounded-lg\">\r\n            <div className=\"text-2xl font-bold text-orange-600\">{networkStats.clusters}</div>\r\n            <div className=\"text-sm text-orange-700\">Network Clusters</div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Legend */}\r\n        <div className=\"flex flex-wrap gap-4 text-sm\">\r\n          <div className=\"flex items-center space-x-2\">\r\n            <div className=\"w-4 h-4 bg-green-500 rounded-full\"></div>\r\n            <span>Ally</span>\r\n          </div>\r\n          <div className=\"flex items-center space-x-2\">\r\n            <div className=\"w-4 h-4 bg-gray-500 rounded-full\"></div>\r\n            <span>Neutral</span>\r\n          </div>\r\n          <div className=\"flex items-center space-x-2\">\r\n            <div className=\"w-4 h-4 bg-red-500 rounded-full\"></div>\r\n            <span>Opponent</span>\r\n          </div>\r\n          <div className=\"flex items-center space-x-2\">\r\n            <div className=\"w-4 h-4 bg-yellow-500 rounded-full\"></div>\r\n            <span>Unknown</span>\r\n          </div>\r\n          <div className=\"text-gray-600\">\r\n            • Node size = Career Influence • Click to select\r\n          </div>\r\n        </div>\r\n\r\n        {/* SVG Network Diagram */}\r\n        <div className=\"border rounded-lg bg-white overflow-hidden\">\r\n          <svg \r\n            width={dimensions.width} \r\n            height={dimensions.height}\r\n            className=\"cursor-pointer\"\r\n          >\r\n            {/* Background */}\r\n            <rect width=\"100%\" height=\"100%\" fill=\"#fafafa\" />\r\n            \r\n            {/* Grid lines for better visual structure */}\r\n            <defs>\r\n              <pattern id=\"grid\" width=\"40\" height=\"40\" patternUnits=\"userSpaceOnUse\">\r\n                <path d=\"M 40 0 L 0 0 0 40\" fill=\"none\" stroke=\"#f1f5f9\" strokeWidth=\"1\"/>\r\n              </pattern>\r\n            </defs>\r\n            <rect width=\"100%\" height=\"100%\" fill=\"url(#grid)\" />\r\n\r\n            {/* Links */}\r\n            {networkData.links.map((link, index) => {\r\n              const sourceNode = networkData.nodes.find(n => n.id === link.source);\r\n              const targetNode = networkData.nodes.find(n => n.id === link.target);\r\n              if (!sourceNode || !targetNode) return null;\r\n\r\n              return (\r\n                <line\r\n                  key={`link-${index}`}\r\n                  x1={sourceNode.x}\r\n                  y1={sourceNode.y}\r\n                  x2={targetNode.x}\r\n                  y2={targetNode.y}\r\n                  stroke={getLinkColor(sourceNode, targetNode)}\r\n                  strokeWidth={link.strength * 3}\r\n                  strokeOpacity={0.6}\r\n                />\r\n              );\r\n            })}\r\n\r\n            {/* Nodes */}\r\n            {networkData.nodes.map((node) => {\r\n              const isSelected = selectedStakeholder?.id === node.id;\r\n              const isHovered = hoveredNode === node.id;\r\n              const radius = getNodeRadius(node.careerInfluence);\r\n              \r\n              return (\r\n                <g key={node.id}>\r\n                  {/* Node shadow */}\r\n                  <circle\r\n                    cx={node.x + 2}\r\n                    cy={node.y + 2}\r\n                    r={radius}\r\n                    fill=\"rgba(0,0,0,0.1)\"\r\n                  />\r\n                  \r\n                  {/* Selection ring */}\r\n                  {isSelected && (\r\n                    <circle\r\n                      cx={node.x}\r\n                      cy={node.y}\r\n                      r={radius + 5}\r\n                      fill=\"none\"\r\n                      stroke=\"#3b82f6\"\r\n                      strokeWidth=\"3\"\r\n                      strokeDasharray=\"5,5\"\r\n                    >\r\n                      <animateTransform\r\n                        attributeName=\"transform\"\r\n                        attributeType=\"XML\"\r\n                        type=\"rotate\"\r\n                        from={`0 ${node.x} ${node.y}`}\r\n                        to={`360 ${node.x} ${node.y}`}\r\n                        dur=\"3s\"\r\n                        repeatCount=\"indefinite\"\r\n                      />\r\n                    </circle>\r\n                  )}\r\n                  \r\n                  {/* Main node */}\r\n                  <circle\r\n                    cx={node.x}\r\n                    cy={node.y}\r\n                    r={radius}\r\n                    fill={getRelationshipColor(node.relationship)}\r\n                    stroke={getTypeColor(node.type)}\r\n                    strokeWidth={isHovered ? 4 : 2}\r\n                    className=\"cursor-pointer transition-all duration-200\"\r\n                    onClick={() => setSelectedStakeholder(filteredStakeholders.find(s => s.id === node.id) || null)}\r\n                    onMouseEnter={() => setHoveredNode(node.id)}\r\n                    onMouseLeave={() => setHoveredNode(null)}\r\n                    style={{\r\n                      filter: isHovered ? 'brightness(1.1)' : 'none',\r\n                      transform: isHovered ? 'scale(1.1)' : 'scale(1)',\r\n                      transformOrigin: `${node.x}px ${node.y}px`\r\n                    }}\r\n                  />\r\n\r\n                  {/* Node label */}\r\n                  <text\r\n                    x={node.x}\r\n                    y={node.y + radius + 15}\r\n                    textAnchor=\"middle\"\r\n                    className=\"text-xs font-medium fill-gray-700 pointer-events-none\"\r\n                    style={{ maxWidth: '80px' }}\r\n                  >\r\n                    {node.name.split(' ')[0]}\r\n                  </text>\r\n\r\n                  {/* Career Influence indicator */}\r\n                  <text\r\n                    x={node.x}\r\n                    y={node.y + 3}\r\n                    textAnchor=\"middle\"\r\n                    className=\"text-xs font-bold fill-white pointer-events-none\"\r\n                  >\r\n                    {node.careerInfluence}\r\n                  </text>\r\n\r\n                  {/* Hover tooltip */}\r\n                  {isHovered && (\r\n                    <g>\r\n                      <rect\r\n                        x={node.x - 60}\r\n                        y={node.y - radius - 40}\r\n                        width=\"120\"\r\n                        height=\"30\"\r\n                        fill=\"rgba(0,0,0,0.8)\"\r\n                        rx=\"4\"\r\n                        className=\"pointer-events-none\"\r\n                      />\r\n                      <text\r\n                        x={node.x}\r\n                        y={node.y - radius - 30}\r\n                        textAnchor=\"middle\"\r\n                        className=\"text-xs font-medium fill-white pointer-events-none\"\r\n                      >\r\n                        {node.name}\r\n                      </text>\r\n                      <text\r\n                        x={node.x}\r\n                        y={node.y - radius - 18}\r\n                        textAnchor=\"middle\"\r\n                        className=\"text-xs fill-gray-300 pointer-events-none\"\r\n                      >\r\n                        {node.organization}\r\n                      </text>\r\n                    </g>\r\n                  )}\r\n                </g>\r\n              );\r\n            })}\r\n          </svg>\r\n        </div>\r\n\r\n        {/* Network Insights */}\r\n        <div className=\"bg-gray-50 rounded-lg p-4\">\r\n          <h3 className=\"font-semibold text-gray-800 mb-3\">Network Insights</h3>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm\">\r\n            <div>\r\n              <strong>Most Connected:</strong> {networkStats.mostConnected}\r\n              <div className=\"text-gray-600\">\r\n                Hub with {filteredStakeholders.find(s => s.name === networkStats.mostConnected)?.connections.length || 0} direct connections\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <strong>Network Density:</strong> {Math.round((networkStats.totalConnections / (filteredStakeholders.length * (filteredStakeholders.length - 1) / 2)) * 100)}%\r\n              <div className=\"text-gray-600\">\r\n                Measures how interconnected your network is\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <strong>Key Relationship Types:</strong>\r\n              <div className=\"text-gray-600\">\r\n                {filteredStakeholders.filter(s => s.relationship === 'ally').length} allies, {' '}\r\n                {filteredStakeholders.filter(s => s.relationship === 'neutral').length} neutral, {' '}\r\n                {filteredStakeholders.filter(s => s.relationship === 'opponent').length} opponents\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <strong>High-Influence Contacts:</strong>\r\n              <div className=\"text-gray-600\">\r\n                {networkStats.highInfluence} stakeholders with 8+ career influence\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const MetricSlider = ({ \r\n    label, \r\n    value, \r\n    onChange, \r\n    metricKey \r\n  }: { \r\n    label: string; \r\n    value: number; \r\n    onChange: (value: number) => void; \r\n    metricKey: keyof typeof metricDefinitions;\r\n  }) => {\r\n    const [showHelp, setShowHelp] = useState(false);\r\n    const metric = metricDefinitions[metricKey];\r\n\r\n    return (\r\n      <div className=\"space-y-2\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <div className=\"flex items-center space-x-2\">\r\n            <label className=\"block text-sm font-medium\">{label}</label>\r\n            <button\r\n              type=\"button\"\r\n              onMouseEnter={() => setShowHelp(true)}\r\n              onMouseLeave={() => setShowHelp(false)}\r\n              className=\"text-gray-400 hover:text-gray-600\"\r\n            >\r\n              <HelpCircle className=\"w-4 h-4\" />\r\n            </button>\r\n          </div>\r\n          <span className=\"text-sm font-medium text-gray-700\">{value}/10</span>\r\n        </div>\r\n        \r\n        <input\r\n          type=\"range\"\r\n          min=\"1\"\r\n          max=\"10\"\r\n          value={value}\r\n          onChange={(e) => onChange(parseInt(e.target.value))}\r\n          className=\"w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer slider\"\r\n        />\r\n        \r\n        <div className=\"flex justify-between text-xs text-gray-500\">\r\n          <span>1</span>\r\n          <span>5</span>\r\n          <span>10</span>\r\n        </div>\r\n\r\n        {showHelp && (\r\n          <div className=\"absolute z-10 p-3 bg-white border rounded-lg shadow-lg max-w-xs\">\r\n            <p className=\"text-sm font-medium mb-2\">{metric.description}</p>\r\n            <div className=\"text-xs text-gray-600 space-y-1\">\r\n              <div><strong>1-3:</strong> {metric.scale.low}</div>\r\n              <div><strong>4-7:</strong> {metric.scale.medium}</div>\r\n              <div><strong>8-10:</strong> {metric.scale.high}</div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const StakeholderForm = ({\r\n    stakeholder,\r\n    onSave,\r\n    onCancel,\r\n  }: {\r\n    stakeholder?: Stakeholder;\r\n    onSave: (stakeholder: Stakeholder) => void;\r\n    onCancel: () => void;\r\n  }) => {\r\n    const [formData, setFormData] = useState<Partial<Stakeholder>>(\r\n      stakeholder || {\r\n        name: \"\",\r\n        organization: \"\",\r\n        position: \"\",\r\n        email: \"\",\r\n        phone: \"\",\r\n        careerInfluence: 5,\r\n        relationshipSupport: 5,\r\n        engagementDifficulty: 5,\r\n        relationship: \"neutral\",\r\n        category: \"external\",\r\n        stakeholderType: \"influencer\",\r\n        engagementFrequency: \"monthly\",\r\n        lastContact: \"\",\r\n        coreInterests: [],\r\n        potentialOutcomes: [],\r\n        notes: \"\",\r\n        location: \"\",\r\n        connections: [],\r\n      }\r\n    );\r\n\r\n    const handleSubmit = () => {\r\n      const newStakeholder: Stakeholder = {\r\n        ...formData,\r\n        id: stakeholder?.id || Date.now().toString(),\r\n        name: formData.name || \"\",\r\n        organization: formData.organization || \"\",\r\n        position: formData.position || \"\",\r\n        email: formData.email || \"\",\r\n        phone: formData.phone || \"\",\r\n        careerInfluence: formData.careerInfluence || 5,\r\n        relationshipSupport: formData.relationshipSupport || 5,\r\n        engagementDifficulty: formData.engagementDifficulty || 5,\r\n        relationship: formData.relationship || \"neutral\",\r\n        category: formData.category || \"external\",\r\n        stakeholderType: formData.stakeholderType || \"influencer\",\r\n        engagementFrequency: formData.engagementFrequency || \"monthly\",\r\n        lastContact: formData.lastContact || \"\",\r\n        coreInterests: formData.coreInterests || [],\r\n        potentialOutcomes: formData.potentialOutcomes || [],\r\n        notes: formData.notes || \"\",\r\n        location: formData.location || \"\",\r\n        connections: formData.connections || [],\r\n      };\r\n      onSave(newStakeholder);\r\n    };\r\n\r\n    return (\r\n      <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n        <div className=\"bg-white rounded-lg p-6 w-full max-w-4xl max-h-[90vh] overflow-y-auto\">\r\n          <h3 className=\"text-xl font-semibold mb-6\">\r\n            {stakeholder ? \"Edit Stakeholder\" : \"Add New Stakeholder\"}\r\n          </h3>\r\n\r\n          <div className=\"space-y-6\">\r\n            {/* Basic Information */}\r\n            <div>\r\n              <h4 className=\"text-lg font-medium mb-4 text-gray-800\">Basic Information</h4>\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                <div>\r\n                  <label className=\"block text-sm font-medium mb-1\">Name *</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={formData.name || \"\"}\r\n                    onChange={(e) =>\r\n                      setFormData({ ...formData, name: e.target.value })\r\n                    }\r\n                    className=\"w-full p-3 border rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                    required\r\n                  />\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"block text-sm font-medium mb-1\">\r\n                    Organization *\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={formData.organization || \"\"}\r\n                    onChange={(e) =>\r\n                      setFormData({ ...formData, organization: e.target.value })\r\n                    }\r\n                    className=\"w-full p-3 border rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                    required\r\n                  />\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"block text-sm font-medium mb-1\">\r\n                    Position\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={formData.position || \"\"}\r\n                    onChange={(e) =>\r\n                      setFormData({ ...formData, position: e.target.value })\r\n                    }\r\n                    className=\"w-full p-3 border rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                  />\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"block text-sm font-medium mb-1\">\r\n                    Location\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={formData.location || \"\"}\r\n                    onChange={(e) =>\r\n                      setFormData({ ...formData, location: e.target.value })\r\n                    }\r\n                    className=\"w-full p-3 border rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                  />\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"block text-sm font-medium mb-1\">Email</label>\r\n                  <input\r\n                    type=\"email\"\r\n                    value={formData.email || \"\"}\r\n                    onChange={(e) =>\r\n                      setFormData({ ...formData, email: e.target.value })\r\n                    }\r\n                    className=\"w-full p-3 border rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                  />\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"block text-sm font-medium mb-1\">Phone</label>\r\n                  <input\r\n                    type=\"tel\"\r\n                    value={formData.phone || \"\"}\r\n                    onChange={(e) =>\r\n                      setFormData({ ...formData, phone: e.target.value })\r\n                    }\r\n                    className=\"w-full p-3 border rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Classification */}\r\n            <div>\r\n              <h4 className=\"text-lg font-medium mb-4 text-gray-800\">Classification</h4>\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                <div>\r\n                  <label className=\"block text-sm font-medium mb-1\">\r\n                    Category\r\n                  </label>\r\n                  <select\r\n                    value={formData.category || \"external\"}\r\n                    onChange={(e) =>\r\n                      setFormData({\r\n                        ...formData,\r\n                        category: e.target.value as any,\r\n                      })\r\n                    }\r\n                    className=\"w-full p-3 border rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                  >\r\n                    <option value=\"internal\">Internal</option>\r\n                    <option value=\"external\">External</option>\r\n                    <option value=\"client\">Client</option>\r\n                    <option value=\"vendor\">Vendor</option>\r\n                    <option value=\"government\">Government</option>\r\n                    <option value=\"media\">Media</option>\r\n                    <option value=\"community\">Community</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div>\r\n                  <div className=\"flex items-center justify-between mb-1\">\r\n                    <label className=\"block text-sm font-medium\">\r\n                      Stakeholder Type\r\n                    </label>\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => setShowTypeGuide(true)}\r\n                      className=\"text-blue-600 hover:text-blue-800 text-sm flex items-center space-x-1\"\r\n                    >\r\n                      <Eye className=\"w-3 h-3\" />\r\n                      <span>View Guide</span>\r\n                    </button>\r\n                  </div>\r\n                  <select\r\n                    value={formData.stakeholderType || \"influencer\"}\r\n                    onChange={(e) =>\r\n                      setFormData({\r\n                        ...formData,\r\n                        stakeholderType: e.target.value as any,\r\n                      })\r\n                    }\r\n                    className=\"w-full p-3 border rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                  >\r\n                    {Object.entries(stakeholderTypeDefinitions).map(\r\n                      ([key, def]) => (\r\n                        <option key={key} value={key}>\r\n                          {def.title}\r\n                        </option>\r\n                      )\r\n                    )}\r\n                  </select>\r\n                  {formData.stakeholderType && (\r\n                    <div className=\"mt-2 p-3 bg-gray-50 rounded-lg text-sm\">\r\n                      <p className=\"text-gray-700\">\r\n                        <strong>\r\n                          {\r\n                            stakeholderTypeDefinitions[\r\n                              formData.stakeholderType as keyof typeof stakeholderTypeDefinitions\r\n                            ]?.title\r\n                          }:\r\n                        </strong>{\" \"}\r\n                        {\r\n                          stakeholderTypeDefinitions[\r\n                            formData.stakeholderType as keyof typeof stakeholderTypeDefinitions\r\n                          ]?.description\r\n                        }\r\n                      </p>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"block text-sm font-medium mb-1\">\r\n                    Relationship\r\n                  </label>\r\n                  <select\r\n                    value={formData.relationship || \"neutral\"}\r\n                    onChange={(e) =>\r\n                      setFormData({\r\n                        ...formData,\r\n                        relationship: e.target.value as any,\r\n                      })\r\n                    }\r\n                    className=\"w-full p-3 border rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                  >\r\n                    <option value=\"ally\">Ally</option>\r\n                    <option value=\"neutral\">Neutral</option>\r\n                    <option value=\"opponent\">Opponent</option>\r\n                    <option value=\"unknown\">Unknown</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"block text-sm font-medium mb-1\">\r\n                    Engagement Frequency\r\n                  </label>\r\n                  <select\r\n                    value={formData.engagementFrequency || \"monthly\"}\r\n                    onChange={(e) =>\r\n                      setFormData({\r\n                        ...formData,\r\n                        engagementFrequency: e.target.value as any,\r\n                      })\r\n                    }\r\n                    className=\"w-full p-3 border rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                  >\r\n                    <option value=\"weekly\">Weekly</option>\r\n                    <option value=\"monthly\">Monthly</option>\r\n                    <option value=\"quarterly\">Quarterly</option>\r\n                    <option value=\"annually\">Annually</option>\r\n                    <option value=\"as_needed\">As Needed</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"md:col-span-2\">\r\n                  <label className=\"block text-sm font-medium mb-1\">\r\n                    Last Contact\r\n                  </label>\r\n                  <input\r\n                    type=\"date\"\r\n                    value={formData.lastContact || \"\"}\r\n                    onChange={(e) =>\r\n                      setFormData({ ...formData, lastContact: e.target.value })\r\n                    }\r\n                    className=\"w-full p-3 border rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Career Impact Metrics */}\r\n            <div>\r\n              <h4 className=\"text-lg font-medium mb-4 text-gray-800\">Career Impact Assessment</h4>\r\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 relative\">\r\n                <MetricSlider\r\n                  label=\"Career Influence\"\r\n                  value={formData.careerInfluence || 5}\r\n                  onChange={(value) => setFormData({ ...formData, careerInfluence: value })}\r\n                  metricKey=\"careerInfluence\"\r\n                />\r\n                <MetricSlider\r\n                  label=\"Relationship Support\"\r\n                  value={formData.relationshipSupport || 5}\r\n                  onChange={(value) => setFormData({ ...formData, relationshipSupport: value })}\r\n                  metricKey=\"relationshipSupport\"\r\n                />\r\n                <MetricSlider\r\n                  label=\"Engagement Difficulty\"\r\n                  value={formData.engagementDifficulty || 5}\r\n                  onChange={(value) => setFormData({ ...formData, engagementDifficulty: value })}\r\n                  metricKey=\"engagementDifficulty\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            {/* Additional Details */}\r\n            <div>\r\n              <h4 className=\"text-lg font-medium mb-4 text-gray-800\">Additional Details</h4>\r\n              <div className=\"space-y-4\">\r\n                <div>\r\n                  <label className=\"block text-sm font-medium mb-1\">\r\n                    Core Interests\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={formData.coreInterests?.join(\", \") || \"\"}\r\n                    onChange={(e) =>\r\n                      setFormData({\r\n                        ...formData,\r\n                        coreInterests: e.target.value\r\n                          .split(\",\")\r\n                          .map((s) => s.trim()),\r\n                      })\r\n                    }\r\n                    className=\"w-full p-3 border rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                    placeholder=\"e.g., Innovation, Leadership, Growth\"\r\n                  />\r\n                  <p className=\"text-xs text-gray-500 mt-1\">Separate multiple interests with commas</p>\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"block text-sm font-medium mb-1\">\r\n                    Potential Outcomes\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={formData.potentialOutcomes?.join(\", \") || \"\"}\r\n                    onChange={(e) =>\r\n                      setFormData({\r\n                        ...formData,\r\n                        potentialOutcomes: e.target.value\r\n                          .split(\",\")\r\n                          .map((s) => s.trim()),\r\n                      })\r\n                    }\r\n                    className=\"w-full p-3 border rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                    placeholder=\"e.g., Job opportunities, Mentorship, Referrals\"\r\n                  />\r\n                  <p className=\"text-xs text-gray-500 mt-1\">Separate multiple outcomes with commas</p>\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"block text-sm font-medium mb-1\">Notes</label>\r\n                  <textarea\r\n                    value={formData.notes || \"\"}\r\n                    onChange={(e) =>\r\n                      setFormData({ ...formData, notes: e.target.value })\r\n                    }\r\n                    className=\"w-full p-3 border rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                    rows={4}\r\n                    placeholder=\"Additional notes about this stakeholder...\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"flex justify-end space-x-3 pt-6 border-t\">\r\n              <button\r\n                type=\"button\"\r\n                onClick={onCancel}\r\n                className=\"px-6 py-3 text-gray-600 border border-gray-300 rounded-md hover:bg-gray-50 transition-colors\"\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                onClick={handleSubmit}\r\n                className=\"px-6 py-3 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors\"\r\n              >\r\n                {stakeholder ? \"Update\" : \"Add\"} Stakeholder\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const StakeholderDetails = ({\r\n    stakeholder,\r\n  }: {\r\n    stakeholder: Stakeholder;\r\n  }) => {\r\n    const connections = stakeholders.filter((s) =>\r\n      stakeholder.connections.includes(s.id)\r\n    );\r\n\r\n    return (\r\n      <div className=\"bg-white rounded-lg border p-6\">\r\n        <div className=\"flex items-center justify-between mb-6\">\r\n          <div className=\"flex items-center space-x-4\">\r\n            <div\r\n              className=\"p-3 rounded-lg\"\r\n              style={{\r\n                backgroundColor:\r\n                  getTypeColor(stakeholder.stakeholderType) + \"20\",\r\n              }}\r\n            >\r\n              {getTypeIcon(stakeholder.stakeholderType)}\r\n            </div>\r\n            <div>\r\n              <h3 className=\"font-semibold text-xl\">{stakeholder.name}</h3>\r\n              <p className=\"text-gray-600 text-lg\">\r\n                {stakeholder.position} at {stakeholder.organization}\r\n              </p>\r\n              <div className=\"flex items-center space-x-2 mt-2\">\r\n                <span\r\n                  className=\"px-3 py-1 rounded-full text-sm font-medium text-white\"\r\n                  style={{\r\n                    backgroundColor: getTypeColor(stakeholder.stakeholderType),\r\n                  }}\r\n                >\r\n                  {\r\n                    stakeholderTypeDefinitions[\r\n                      stakeholder.stakeholderType as keyof typeof stakeholderTypeDefinitions\r\n                    ]?.title\r\n                  }\r\n                </span>\r\n                <span\r\n                  className={`px-3 py-1 rounded-full text-sm font-medium ${\r\n                    stakeholder.relationship === \"ally\"\r\n                      ? \"bg-green-100 text-green-800\"\r\n                      : stakeholder.relationship === \"neutral\"\r\n                      ? \"bg-gray-100 text-gray-800\"\r\n                      : stakeholder.relationship === \"opponent\"\r\n                      ? \"bg-red-100 text-red-800\"\r\n                      : \"bg-yellow-100 text-yellow-800\"\r\n                  }`}\r\n                >\r\n                  {stakeholder.relationship.charAt(0).toUpperCase() +\r\n                    stakeholder.relationship.slice(1)}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"flex space-x-2\">\r\n            <button\r\n              onClick={() => handleEditStakeholder(stakeholder)}\r\n              className=\"p-2 text-blue-600 hover:bg-blue-50 rounded-lg\"\r\n            >\r\n              <Edit className=\"w-5 h-5\" />\r\n            </button>\r\n            <button\r\n              onClick={() => handleDeleteStakeholder(stakeholder)}\r\n              className=\"p-2 text-red-600 hover:bg-red-50 rounded-lg\"\r\n            >\r\n              <Trash2 className=\"w-5 h-5\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\r\n          <div>\r\n            <h4 className=\"font-semibold mb-3 text-gray-800\">Contact Information</h4>\r\n            <div className=\"space-y-2 text-sm\">\r\n              <p>\r\n                <span className=\"text-gray-600\">Email:</span>{\" \"}\r\n                <span className=\"font-medium\">{stakeholder.email}</span>\r\n              </p>\r\n              <p>\r\n                <span className=\"text-gray-600\">Phone:</span>{\" \"}\r\n                <span className=\"font-medium\">{stakeholder.phone}</span>\r\n              </p>\r\n              <p>\r\n                <span className=\"text-gray-600\">Location:</span>{\" \"}\r\n                <span className=\"font-medium\">{stakeholder.location}</span>\r\n              </p>\r\n              <p>\r\n                <span className=\"text-gray-600\">Last Contact:</span>{\" \"}\r\n                <span className=\"font-medium\">{stakeholder.lastContact}</span>\r\n              </p>\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            <h4 className=\"font-semibold mb-3 text-gray-800\">Career Impact Metrics</h4>\r\n            <div className=\"space-y-3\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <span className=\"text-sm text-gray-600\">Career Influence:</span>\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <div className=\"w-24 bg-gray-200 rounded-full h-2\">\r\n                    <div \r\n                      className=\"bg-blue-600 h-2 rounded-full\" \r\n                      style={{ width: `${(stakeholder.careerInfluence / 10) * 100}%` }}\r\n                    ></div>\r\n                  </div>\r\n                  <span className=\"text-sm font-medium\">{stakeholder.careerInfluence}/10</span>\r\n                </div>\r\n              </div>\r\n              <div className=\"flex items-center justify-between\">\r\n                <span className=\"text-sm text-gray-600\">Relationship Support:</span>\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <div className=\"w-24 bg-gray-200 rounded-full h-2\">\r\n                    <div \r\n                      className=\"bg-green-600 h-2 rounded-full\" \r\n                      style={{ width: `${(stakeholder.relationshipSupport / 10) * 100}%` }}\r\n                    ></div>\r\n                  </div>\r\n                  <span className=\"text-sm font-medium\">{stakeholder.relationshipSupport}/10</span>\r\n                </div>\r\n              </div>\r\n              <div className=\"flex items-center justify-between\">\r\n                <span className=\"text-sm text-gray-600\">Engagement Difficulty:</span>\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <div className=\"w-24 bg-gray-200 rounded-full h-2\">\r\n                    <div \r\n                      className=\"bg-orange-600 h-2 rounded-full\" \r\n                      style={{ width: `${(stakeholder.engagementDifficulty / 10) * 100}%` }}\r\n                    ></div>\r\n                  </div>\r\n                  <span className=\"text-sm font-medium\">{stakeholder.engagementDifficulty}/10</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"mt-6\">\r\n          <h4 className=\"font-semibold mb-3 text-gray-800\">Stakeholder Type</h4>\r\n          <div className=\"p-4 bg-gray-50 rounded-lg\">\r\n            <p className=\"text-sm text-gray-700\">\r\n              <strong>\r\n                {\r\n                  stakeholderTypeDefinitions[\r\n                    stakeholder.stakeholderType as keyof typeof stakeholderTypeDefinitions\r\n                  ]?.title\r\n                }:\r\n              </strong>{\" \"}\r\n              {\r\n                stakeholderTypeDefinitions[\r\n                  stakeholder.stakeholderType as keyof typeof stakeholderTypeDefinitions\r\n                ]?.description\r\n              }\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"mt-6\">\r\n          <h4 className=\"font-semibold mb-3 text-gray-800\">Core Interests</h4>\r\n          <div className=\"flex flex-wrap gap-2\">\r\n            {stakeholder.coreInterests.map((interest, index) => (\r\n              <span\r\n                key={index}\r\n                className=\"px-3 py-1 bg-blue-100 text-blue-800 rounded-full text-sm\"\r\n              >\r\n                {interest}\r\n              </span>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"mt-6\">\r\n          <h4 className=\"font-semibold mb-3 text-gray-800\">Potential Outcomes</h4>\r\n          <div className=\"flex flex-wrap gap-2\">\r\n            {stakeholder.potentialOutcomes.map((outcome, index) => (\r\n              <span\r\n                key={index}\r\n                className=\"px-3 py-1 bg-green-100 text-green-800 rounded-full text-sm\"\r\n              >\r\n                {outcome}\r\n              </span>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        {connections.length > 0 && (\r\n          <div className=\"mt-6\">\r\n            <h4 className=\"font-semibold mb-3 text-gray-800\">Connected Stakeholders</h4>\r\n            <div className=\"flex flex-wrap gap-2\">\r\n              {connections.map((connection) => (\r\n                <span\r\n                  key={connection.id}\r\n                  className=\"px-3 py-1 bg-gray-100 text-gray-800 rounded-full text-sm cursor-pointer hover:bg-gray-200\"\r\n                  onClick={() => setSelectedStakeholder(connection)}\r\n                >\r\n                  {connection.name}\r\n                </span>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {stakeholder.notes && (\r\n          <div className=\"mt-6\">\r\n            <h4 className=\"font-semibold mb-3 text-gray-800\">Notes</h4>\r\n            <p className=\"text-sm text-gray-700 bg-gray-50 p-4 rounded-lg\">{stakeholder.notes}</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const CustomTooltip = ({ active, payload }: any) => {\r\n    if (active && payload && payload.length) {\r\n      const data = payload[0].payload;\r\n      return (\r\n        <div className=\"bg-white p-3 border rounded-lg shadow-lg\">\r\n          <p className=\"font-semibold\">{data.name}</p>\r\n          <p className=\"text-sm text-gray-600\">{data.organization}</p>\r\n          <p className=\"text-sm\">\r\n            {matrixView === \"influence-support\" &&\r\n              `Career Influence: ${data.careerInfluence}, Support: ${data.relationshipSupport}`}\r\n            {matrixView === \"influence-difficulty\" &&\r\n              `Career Influence: ${data.careerInfluence}, Difficulty: ${data.engagementDifficulty}`}\r\n          </p>\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const StakeholderTypeGuide = () => {\r\n    return (\r\n      <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n        <div className=\"bg-white rounded-lg p-6 w-full max-w-6xl max-h-[90vh] overflow-y-auto\">\r\n          <div className=\"flex justify-between items-center mb-6\">\r\n            <h2 className=\"text-2xl font-semibold\">Stakeholder Type Guide</h2>\r\n            <button\r\n              onClick={() => setShowTypeGuide(false)}\r\n              className=\"text-gray-500 hover:text-gray-700 text-2xl\"\r\n            >\r\n              ×\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n            {Object.entries(stakeholderTypeDefinitions).map(\r\n              ([key, definition]) => (\r\n                <div key={key} className=\"border rounded-lg p-4\">\r\n                  <div className=\"flex items-center space-x-3 mb-3\">\r\n                    <div\r\n                      className=\"p-2 rounded-lg text-white font-bold\"\r\n                      style={{ backgroundColor: definition.color }}\r\n                    >\r\n                      {definition.icon}\r\n                    </div>\r\n                    <h3\r\n                      className=\"text-lg font-semibold\"\r\n                      style={{ color: definition.color }}\r\n                    >\r\n                      {definition.title}\r\n                    </h3>\r\n                  </div>\r\n\r\n                  <p className=\"text-gray-700 mb-3\">{definition.description}</p>\r\n\r\n                  <div className=\"mb-3\">\r\n                    <h4 className=\"font-medium text-sm text-gray-800 mb-2\">\r\n                      Key Characteristics:\r\n                    </h4>\r\n                    <ul className=\"text-sm text-gray-600 space-y-1\">\r\n                      {definition.characteristics.map((char, index) => (\r\n                        <li key={index} className=\"flex items-start\">\r\n                          <span className=\"text-blue-500 mr-2\">•</span>\r\n                          {char}\r\n                        </li>\r\n                      ))}\r\n                    </ul>\r\n                  </div>\r\n\r\n                  <div>\r\n                    <h4 className=\"font-medium text-sm text-gray-800 mb-2\">\r\n                      Examples:\r\n                    </h4>\r\n                    <div className=\"flex flex-wrap gap-1\">\r\n                      {definition.examples.map((example, index) => (\r\n                        <span\r\n                          key={index}\r\n                          className=\"px-2 py-1 rounded text-xs text-white\"\r\n                          style={{ backgroundColor: definition.color }}\r\n                        >\r\n                          {example}\r\n                        </span>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"mt-6 p-4 bg-blue-50 rounded-lg\">\r\n            <h3 className=\"font-semibold text-blue-800 mb-2\">\r\n              Pro Tips for Career Success:\r\n            </h3>\r\n            <ul className=\"text-sm text-blue-700 space-y-1\">\r\n              <li>\r\n                • <strong>Power Brokers:</strong> Cultivate these relationships\r\n                early - they can open unexpected doors\r\n              </li>\r\n              <li>\r\n                • <strong>Decision Makers:</strong> Understand their priorities\r\n                and align your value proposition accordingly\r\n              </li>\r\n              <li>\r\n                • <strong>Champions:</strong> Keep them informed of your wins so\r\n                they can advocate effectively\r\n              </li>\r\n              <li>\r\n                • <strong>Gatekeepers:</strong> Build genuine relationships -\r\n                they often have more influence than apparent\r\n              </li>\r\n              <li>\r\n                • <strong>Connectors:</strong> Offer value first before asking\r\n                for introductions\r\n              </li>\r\n            </ul>\r\n          </div>\r\n\r\n          <div className=\"flex justify-end mt-6\">\r\n            <button\r\n              onClick={() => setShowTypeGuide(false)}\r\n              className=\"px-6 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700\"\r\n            >\r\n              Got It!\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50 p-4\">\r\n      <div className=\"max-w-7xl mx-auto\">\r\n        {/* Header */}\r\n        <div className=\"mb-6\">\r\n          <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">\r\n            Career Stakeholder Matrix\r\n          </h1>\r\n          <p className=\"text-gray-600\">\r\n            Map and analyze your professional relationships to accelerate career\r\n            growth\r\n          </p>\r\n        </div>\r\n\r\n        {/* Controls */}\r\n        <div className=\"bg-white rounded-lg border p-4 mb-6\">\r\n          <div className=\"flex flex-wrap items-center gap-4\">\r\n            <div className=\"flex items-center space-x-2\">\r\n              <Search className=\"w-5 h-5 text-gray-400\" />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Search stakeholders...\"\r\n                value={searchTerm}\r\n                onChange={(e) => setSearchTerm(e.target.value)}\r\n                className=\"border rounded-md px-3 py-2 w-64 focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n              />\r\n            </div>\r\n\r\n            <select\r\n              value={filterCategory}\r\n              onChange={(e) => setFilterCategory(e.target.value)}\r\n              className=\"border rounded-md px-3 py-2 focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n            >\r\n              <option value=\"all\">All Categories</option>\r\n              <option value=\"internal\">Internal</option>\r\n              <option value=\"external\">External</option>\r\n              <option value=\"client\">Client</option>\r\n              <option value=\"vendor\">Vendor</option>\r\n              <option value=\"government\">Government</option>\r\n              <option value=\"media\">Media</option>\r\n              <option value=\"community\">Community</option>\r\n            </select>\r\n\r\n            <select\r\n              value={filterType}\r\n              onChange={(e) => setFilterType(e.target.value)}\r\n              className=\"border rounded-md px-3 py-2 focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n            >\r\n              <option value=\"all\">All Types</option>\r\n              <option value=\"power_broker\">Power Brokers</option>\r\n              <option value=\"decision_maker\">Decision Makers</option>\r\n              <option value=\"influencer\">Influencers</option>\r\n              <option value=\"gatekeeper\">Gatekeepers</option>\r\n              <option value=\"champion\">Champions</option>\r\n              <option value=\"analyst\">Analysts</option>\r\n              <option value=\"connector\">Connectors</option>\r\n            </select>\r\n\r\n            <div className=\"flex border rounded-md\">\r\n              <button\r\n                onClick={() => setViewMode(\"matrix\")}\r\n                className={`px-4 py-2 text-sm font-medium ${\r\n                  viewMode === \"matrix\"\r\n                    ? \"bg-blue-600 text-white\"\r\n                    : \"text-gray-600 hover:text-gray-900\"\r\n                }`}\r\n              >\r\n                Matrix View\r\n              </button>\r\n              <button\r\n                onClick={() => setViewMode(\"network\")}\r\n                className={`px-4 py-2 text-sm font-medium ${\r\n                  viewMode === \"network\"\r\n                    ? \"bg-blue-600 text-white\"\r\n                    : \"text-gray-600 hover:text-gray-900\"\r\n                }`}\r\n              >\r\n                Network View\r\n              </button>\r\n              <button\r\n                onClick={() => setViewMode(\"analytics\")}\r\n                className={`px-4 py-2 text-sm font-medium ${\r\n                  viewMode === \"analytics\"\r\n                    ? \"bg-blue-600 text-white\"\r\n                    : \"text-gray-600 hover:text-gray-900\"\r\n                }`}\r\n              >\r\n                Analytics\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"flex items-center space-x-2\">\r\n              <button\r\n                onClick={() => setIsAddingStakeholder(true)}\r\n                className=\"bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700 flex items-center space-x-2 transition-colors\"\r\n              >\r\n                <Plus className=\"w-4 h-4\" />\r\n                <span>Add Stakeholder</span>\r\n              </button>\r\n\r\n              <button\r\n                onClick={() => setShowTypeGuide(true)}\r\n                className=\"bg-indigo-600 text-white px-4 py-2 rounded-md hover:bg-indigo-700 flex items-center space-x-2 transition-colors\"\r\n              >\r\n                <Eye className=\"w-4 h-4\" />\r\n                <span>Type Guide</span>\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Quick Access Help Banner */}\r\n          <div className=\"mt-4 p-3 bg-blue-50 rounded-lg border border-blue-200\">\r\n            <p className=\"text-sm text-blue-800\">\r\n              💡 <strong>New to stakeholder mapping?</strong> Click the{\" \"}\r\n              <button\r\n                onClick={() => setShowTypeGuide(true)}\r\n                className=\"inline-flex items-center space-x-1 text-blue-600 hover:text-blue-800 font-medium underline\"\r\n              >\r\n                <Eye className=\"w-3 h-3\" />\r\n                <span>Type Guide</span>\r\n              </button>{\" \"}\r\n              to learn about the 7 stakeholder types and how to categorize your\r\n              professional relationships effectively.\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Main Content */}\r\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\r\n          {/* Visualization Panel */}\r\n          <div className=\"lg:col-span-2\">\r\n            <div className=\"bg-white rounded-lg border p-6\">\r\n              {viewMode === \"matrix\" && (\r\n                <>\r\n                  <div className=\"flex items-center justify-between mb-4\">\r\n                    <h2 className=\"text-lg font-semibold\">\r\n                      Stakeholder Matrix\r\n                    </h2>\r\n                    <select\r\n                      value={matrixView}\r\n                      onChange={(e) => setMatrixView(e.target.value as any)}\r\n                      className=\"border rounded-md px-3 py-2 focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                    >\r\n                      <option value=\"influence-support\">\r\n                        Career Influence vs Support\r\n                      </option>\r\n                      <option value=\"influence-difficulty\">\r\n                        Career Influence vs Engagement Difficulty\r\n                      </option>\r\n                    </select>\r\n                  </div>\r\n\r\n                  <div className=\"h-96 relative\">\r\n                    <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                      <ScatterChart>\r\n                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                        <XAxis\r\n                          type=\"number\"\r\n                          dataKey=\"x\"\r\n                          domain={[0, 11]}\r\n                          name={matrixView === \"influence-support\" ? \"Career Influence\" : \"Career Influence\"}\r\n                          ticks={[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]}\r\n                        />\r\n                        <YAxis\r\n                          type=\"number\"\r\n                          dataKey=\"y\"\r\n                          domain={[0, 11]}\r\n                          name={matrixView === \"influence-support\" ? \"Relationship Support\" : \"Engagement Difficulty\"}\r\n                          ticks={[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]}\r\n                        />\r\n                        <Tooltip content={<CustomTooltip />} />\r\n                        <Scatter data={getMatrixData()}>\r\n                          {getMatrixData().map((entry, index) => (\r\n                            <Cell\r\n                              key={`cell-${index}`}\r\n                              fill={getCategoryColor(entry.category)}\r\n                            />\r\n                          ))}\r\n                        </Scatter>\r\n                      </ScatterChart>\r\n                    </ResponsiveContainer>\r\n\r\n                    {/* Quadrant Labels */}\r\n                    <div className=\"absolute top-4 right-4 text-xs text-gray-600 bg-white px-2 py-1 rounded shadow\">\r\n                      {getQuadrantLabel(1)}\r\n                    </div>\r\n                    <div className=\"absolute top-4 left-4 text-xs text-gray-600 bg-white px-2 py-1 rounded shadow\">\r\n                      {getQuadrantLabel(2)}\r\n                    </div>\r\n                    <div className=\"absolute bottom-4 left-4 text-xs text-gray-600 bg-white px-2 py-1 rounded shadow\">\r\n                      {getQuadrantLabel(4)}\r\n                    </div>\r\n                    <div className=\"absolute bottom-4 right-4 text-xs text-gray-600 bg-white px-2 py-1 rounded shadow\">\r\n                      {getQuadrantLabel(3)}\r\n                    </div>\r\n                  </div>\r\n                </>\r\n              )}\r\n\r\n              {viewMode === \"analytics\" && (\r\n                <div className=\"space-y-6\">\r\n                  <h2 className=\"text-lg font-semibold\">\r\n                    Stakeholder Analytics\r\n                  </h2>\r\n\r\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n                    <div>\r\n                      <h3 className=\"font-medium mb-3\">\r\n                        Distribution by Category\r\n                      </h3>\r\n                      <div className=\"h-64\">\r\n                        <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                          <PieChart>\r\n                            <Pie\r\n                              data={Object.entries(\r\n                                filteredStakeholders.reduce((acc, s) => {\r\n                                  acc[s.category] = (acc[s.category] || 0) + 1;\r\n                                  return acc;\r\n                                }, {} as Record<string, number>)\r\n                              ).map(([key, value]) => ({ name: key, value }))}\r\n                              cx=\"50%\"\r\n                              cy=\"50%\"\r\n                              outerRadius={80}\r\n                              dataKey=\"value\"\r\n                              label={({ name, percent }) =>\r\n                                `${name}: ${(percent * 100).toFixed(0)}%`\r\n                              }\r\n                            >\r\n                              {Object.keys(\r\n                                filteredStakeholders.reduce((acc, s) => {\r\n                                  acc[s.category] = (acc[s.category] || 0) + 1;\r\n                                  return acc;\r\n                                }, {} as Record<string, number>)\r\n                              ).map((category, index) => (\r\n                                <Cell\r\n                                  key={`cell-${index}`}\r\n                                  fill={getCategoryColor(category)}\r\n                                />\r\n                              ))}\r\n                            </Pie>\r\n                            <Tooltip />\r\n                          </PieChart>\r\n                        </ResponsiveContainer>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div>\r\n                      <h3 className=\"font-medium mb-3\">\r\n                        Average Career Influence by Type\r\n                      </h3>\r\n                      <div className=\"h-64\">\r\n                        <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                          <BarChart\r\n                            data={Object.entries(\r\n                              filteredStakeholders.reduce((acc, s) => {\r\n                                if (!acc[s.stakeholderType]) {\r\n                                  acc[s.stakeholderType] = {\r\n                                    total: 0,\r\n                                    count: 0,\r\n                                  };\r\n                                }\r\n                                acc[s.stakeholderType].total += s.careerInfluence;\r\n                                acc[s.stakeholderType].count += 1;\r\n                                return acc;\r\n                              }, {} as Record<string, { total: number; count: number }>)\r\n                            ).map(([key, value]) => ({\r\n                              name: key.replace(\"_\", \" \"),\r\n                              value: Math.round(value.total / value.count),\r\n                            }))}\r\n                          >\r\n                            <CartesianGrid strokeDasharray=\"3 3\" />\r\n                            <XAxis dataKey=\"name\" />\r\n                            <YAxis />\r\n                            <Tooltip />\r\n                            <Bar dataKey=\"value\" fill=\"#3b82f6\" />\r\n                          </BarChart>\r\n                        </ResponsiveContainer>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {viewMode === \"network\" && <NetworkView />}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Stakeholder List */}\r\n          <div className=\"space-y-4\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <h2 className=\"text-lg font-semibold\">\r\n                Stakeholders ({filteredStakeholders.length})\r\n              </h2>\r\n            </div>\r\n\r\n            {/* Quick Stats */}\r\n            <div className=\"bg-white rounded-lg border p-4\">\r\n              <h3 className=\"font-medium mb-3\">Key Insights</h3>\r\n              <div className=\"grid grid-cols-2 gap-4 text-sm\">\r\n                <div>\r\n                  <span className=\"text-gray-600\">Power Brokers:</span>\r\n                  <span className=\"font-medium ml-2\">\r\n                    {\r\n                      filteredStakeholders.filter(\r\n                        (s) => s.stakeholderType === \"power_broker\"\r\n                      ).length\r\n                    }\r\n                  </span>\r\n                </div>\r\n                <div>\r\n                  <span className=\"text-gray-600\">High Influence:</span>\r\n                  <span className=\"font-medium ml-2\">\r\n                    {\r\n                      filteredStakeholders.filter((s) => s.careerInfluence >= 8)\r\n                        .length\r\n                    }\r\n                  </span>\r\n                </div>\r\n                <div>\r\n                  <span className=\"text-gray-600\">Strong Support:</span>\r\n                  <span className=\"font-medium ml-2\">\r\n                    {\r\n                      filteredStakeholders.filter(\r\n                        (s) => s.relationshipSupport >= 8\r\n                      ).length\r\n                    }\r\n                  </span>\r\n                </div>\r\n                <div>\r\n                  <span className=\"text-gray-600\">Needs Attention:</span>\r\n                  <span className=\"font-medium ml-2\">\r\n                    {\r\n                      filteredStakeholders.filter(\r\n                        (s) => s.careerInfluence >= 7 && s.relationshipSupport <= 6\r\n                      ).length\r\n                    }\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"space-y-3 max-h-96 overflow-y-auto\">\r\n              {filteredStakeholders.map((stakeholder) => (\r\n                <div\r\n                  key={stakeholder.id}\r\n                  className=\"bg-white rounded-lg border p-4 hover:shadow-md transition-shadow cursor-pointer\"\r\n                  onClick={() => setSelectedStakeholder(stakeholder)}\r\n                >\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <div className=\"flex items-center space-x-3 flex-1\">\r\n                      <div\r\n                        className=\"p-2 rounded-lg\"\r\n                        style={{\r\n                          backgroundColor:\r\n                            getTypeColor(stakeholder.stakeholderType) + \"20\",\r\n                        }}\r\n                      >\r\n                        {getTypeIcon(stakeholder.stakeholderType)}\r\n                      </div>\r\n                      <div className=\"flex-1\">\r\n                        <h3 className=\"font-medium\">{stakeholder.name}</h3>\r\n                        <div className=\"flex items-center space-x-2\">\r\n                          <p className=\"text-sm text-gray-600\">\r\n                            {stakeholder.organization}\r\n                          </p>\r\n                          <span\r\n                            className=\"px-2 py-1 rounded text-xs font-medium text-white\"\r\n                            style={{\r\n                              backgroundColor: getTypeColor(\r\n                                stakeholder.stakeholderType\r\n                              ),\r\n                            }}\r\n                          >\r\n                            {\r\n                              stakeholderTypeDefinitions[\r\n                                stakeholder.stakeholderType as keyof typeof stakeholderTypeDefinitions\r\n                              ]?.title\r\n                            }\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"flex items-center space-x-2\">\r\n                      <div className=\"text-right text-sm\">\r\n                        <div className=\"text-gray-600\">\r\n                          Influence: {stakeholder.careerInfluence}/10\r\n                        </div>\r\n                        <div className=\"text-gray-600\">\r\n                          Support: {stakeholder.relationshipSupport}/10\r\n                        </div>\r\n                      </div>\r\n                      <button\r\n                        onClick={(e) => {\r\n                          e.stopPropagation();\r\n                          handleEditStakeholder(stakeholder);\r\n                        }}\r\n                        className=\"p-1 text-blue-600 hover:bg-blue-50 rounded\"\r\n                        title=\"Edit stakeholder\"\r\n                      >\r\n                        <Edit className=\"w-4 h-4\" />\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"mt-3 flex flex-wrap gap-1\">\r\n                    {stakeholder.coreInterests\r\n                      .slice(0, 3)\r\n                      .map((interest, index) => (\r\n                        <span\r\n                          key={index}\r\n                          className=\"px-2 py-1 bg-gray-100 text-gray-700 rounded text-xs\"\r\n                        >\r\n                          {interest}\r\n                        </span>\r\n                      ))}\r\n                    {stakeholder.coreInterests.length > 3 && (\r\n                      <span className=\"px-2 py-1 bg-gray-100 text-gray-700 rounded text-xs\">\r\n                        +{stakeholder.coreInterests.length - 3} more\r\n                      </span>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Stakeholder Details Modal */}\r\n        {selectedStakeholder &&\r\n          !isAddingStakeholder &&\r\n          !isEditingStakeholder && (\r\n            <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n              <div className=\"bg-white rounded-lg p-6 w-full max-w-4xl max-h-[90vh] overflow-y-auto\">\r\n                <div className=\"flex justify-between items-center mb-4\">\r\n                  <h2 className=\"text-xl font-semibold\">Stakeholder Details</h2>\r\n                  <button\r\n                    onClick={() => setSelectedStakeholder(null)}\r\n                    className=\"text-gray-500 hover:text-gray-700\"\r\n                  >\r\n                    ×\r\n                  </button>\r\n                </div>\r\n                <StakeholderDetails stakeholder={selectedStakeholder} />\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n        {/* Add/Edit Stakeholder Form */}\r\n        {(isAddingStakeholder || isEditingStakeholder) && (\r\n          <StakeholderForm\r\n            stakeholder={\r\n              isEditingStakeholder\r\n                ? selectedStakeholder || undefined\r\n                : undefined\r\n            }\r\n            onSave={handleSaveStakeholder}\r\n            onCancel={handleCancelForm}\r\n          />\r\n        )}\r\n\r\n        {/* Stakeholder Type Guide */}\r\n        {showTypeGuide && <StakeholderTypeGuide />}\r\n\r\n        {/* Delete Confirmation Dialog */}\r\n        {stakeholderToDelete && (\r\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n            <div className=\"bg-white rounded-lg p-6 w-full max-w-md\">\r\n              <h3 className=\"text-lg font-semibold mb-4\">Confirm Deletion</h3>\r\n              <p className=\"text-gray-600 mb-6\">\r\n                Are you sure you want to delete{\" \"}\r\n                <strong>{stakeholderToDelete.name}</strong>? This action cannot\r\n                be undone.\r\n              </p>\r\n              <div className=\"flex justify-end space-x-3\">\r\n                <button\r\n                  onClick={() => setStakeholderToDelete(null)}\r\n                  className=\"px-4 py-2 text-gray-600 border rounded-md hover:bg-gray-50\"\r\n                >\r\n                  Cancel\r\n                </button>\r\n                <button\r\n                  onClick={confirmDelete}\r\n                  className=\"px-4 py-2 bg-red-600 text-white rounded-md hover:bg-red-700\"\r\n                >\r\n                  Delete Stakeholder\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CareerStakeholderMatrix;"],"names":[],"mappings":";;;;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAvBA;;;;;AA+EA,wCAAwC;AACxC,MAAM,oBAAoB;IACxB,iBAAiB;QACf,OAAO;QACP,aAAa;QACb,OAAO;YACL,KAAK;YACL,QAAQ;YACR,MAAM;QACR;IACF;IACA,qBAAqB;QACnB,OAAO;QACP,aAAa;QACb,OAAO;YACL,KAAK;YACL,QAAQ;YACR,MAAM;QACR;IACF;IACA,sBAAsB;QACpB,OAAO;QACP,aAAa;QACb,OAAO;YACL,KAAK;YACL,QAAQ;YACR,MAAM;QACR;IACF;AACF;AAEA,MAAM,0BAAoC;IACxC,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB,EAAE;IAClE,MAAM,CAAC,qBAAqB,uBAAuB,GACjD,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAsB;IAC/B,MAAM,CAAC,qBAAqB,uBAAuB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC/D,MAAM,CAAC,sBAAsB,wBAAwB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACjE,MAAM,CAAC,qBAAqB,uBAAuB,GACjD,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAsB;IAC/B,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnD,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IAC7D,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IACrD,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EACrC;IAEF,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAEzC;IAEF,mDAAmD;IACnD,MAAM,6BAA6B;QACjC,cAAc;YACZ,OAAO;YACP,aACE;YACF,iBAAiB;gBACf;gBACA;gBACA;gBACA;aACD;YACD,UAAU;gBACR;gBACA;gBACA;gBACA;aACD;YACD,MAAM;YACN,OAAO;QACT;QACA,gBAAgB;YACd,OAAO;YACP,aACE;YACF,iBAAiB;gBACf;gBACA;gBACA;gBACA;aACD;YACD,UAAU;gBACR;gBACA;gBACA;gBACA;aACD;YACD,MAAM;YACN,OAAO;QACT;QACA,YAAY;YACV,OAAO;YACP,aACE;YACF,iBAAiB;gBACf;gBACA;gBACA;gBACA;aACD;YACD,UAAU;gBACR;gBACA;gBACA;gBACA;aACD;YACD,MAAM;YACN,OAAO;QACT;QACA,YAAY;YACV,OAAO;YACP,aACE;YACF,iBAAiB;gBACf;gBACA;gBACA;gBACA;aACD;YACD,UAAU;gBACR;gBACA;gBACA;gBACA;aACD;YACD,MAAM;YACN,OAAO;QACT;QACA,UAAU;YACR,OAAO;YACP,aACE;YACF,iBAAiB;gBACf;gBACA;gBACA;gBACA;aACD;YACD,UAAU;gBACR;gBACA;gBACA;gBACA;aACD;YACD,MAAM;YACN,OAAO;QACT;QACA,SAAS;YACP,OAAO;YACP,aACE;YACF,iBAAiB;gBACf;gBACA;gBACA;gBACA;aACD;YACD,UAAU;gBACR;gBACA;gBACA;gBACA;aACD;YACD,MAAM;YACN,OAAO;QACT;QACA,WAAW;YACT,OAAO;YACP,aACE;YACF,iBAAiB;gBACf;gBACA;gBACA;gBACA;aACD;YACD,UAAU;gBACR;gBACA;gBACA;gBACA;aACD;YACD,MAAM;YACN,OAAO;QACT;IACF;IAEA,yEAAyE;IACzE,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,qBAAoC;YACxC;gBACE,IAAI;gBACJ,MAAM;gBACN,cAAc;gBACd,UAAU;gBACV,OAAO;gBACP,OAAO;gBACP,iBAAiB;gBACjB,qBAAqB;gBACrB,sBAAsB;gBACtB,cAAc;gBACd,UAAU;gBACV,iBAAiB;gBACjB,qBAAqB;gBACrB,aAAa;gBACb,eAAe;oBACb;oBACA;oBACA;oBACA;iBACD;gBACD,mBAAmB;oBACjB;oBACA;oBACA;oBACA;iBACD;gBACD,OACE;gBACF,UAAU;gBACV,aAAa;oBAAC;oBAAK;iBAAI;YACzB;YACA;gBACE,IAAI;gBACJ,MAAM;gBACN,cAAc;gBACd,UAAU;gBACV,OAAO;gBACP,OAAO;gBACP,iBAAiB;gBACjB,qBAAqB;gBACrB,sBAAsB;gBACtB,cAAc;gBACd,UAAU;gBACV,iBAAiB;gBACjB,qBAAqB;gBACrB,aAAa;gBACb,eAAe;oBACb;oBACA;oBACA;oBACA;iBACD;gBACD,mBAAmB;oBACjB;oBACA;oBACA;oBACA;iBACD;gBACD,OACE;gBACF,UAAU;gBACV,aAAa;oBAAC;oBAAK;oBAAK;iBAAI;YAC9B;YACA;gBACE,IAAI;gBACJ,MAAM;gBACN,cAAc;gBACd,UAAU;gBACV,OAAO;gBACP,OAAO;gBACP,iBAAiB;gBACjB,qBAAqB;gBACrB,sBAAsB;gBACtB,cAAc;gBACd,UAAU;gBACV,iBAAiB;gBACjB,qBAAqB;gBACrB,aAAa;gBACb,eAAe;oBACb;oBACA;oBACA;oBACA;iBACD;gBACD,mBAAmB;oBACjB;oBACA;oBACA;oBACA;iBACD;gBACD,OACE;gBACF,UAAU;gBACV,aAAa;oBAAC;oBAAK;oBAAK;iBAAI;YAC9B;YACA;gBACE,IAAI;gBACJ,MAAM;gBACN,cAAc;gBACd,UAAU;gBACV,OAAO;gBACP,OAAO;gBACP,iBAAiB;gBACjB,qBAAqB;gBACrB,sBAAsB;gBACtB,cAAc;gBACd,UAAU;gBACV,iBAAiB;gBACjB,qBAAqB;gBACrB,aAAa;gBACb,eAAe;oBACb;oBACA;oBACA;oBACA;iBACD;gBACD,mBAAmB;oBACjB;oBACA;oBACA;oBACA;iBACD;gBACD,OACE;gBACF,UAAU;gBACV,aAAa;oBAAC;oBAAK;oBAAK;iBAAI;YAC9B;YACA;gBACE,IAAI;gBACJ,MAAM;gBACN,cAAc;gBACd,UAAU;gBACV,OAAO;gBACP,OAAO;gBACP,iBAAiB;gBACjB,qBAAqB;gBACrB,sBAAsB;gBACtB,cAAc;gBACd,UAAU;gBACV,iBAAiB;gBACjB,qBAAqB;gBACrB,aAAa;gBACb,eAAe;oBACb;oBACA;oBACA;oBACA;iBACD;gBACD,mBAAmB;oBACjB;oBACA;oBACA;oBACA;iBACD;gBACD,OACE;gBACF,UAAU;gBACV,aAAa;oBAAC;oBAAK;iBAAI;YACzB;YACA;gBACE,IAAI;gBACJ,MAAM;gBACN,cAAc;gBACd,UAAU;gBACV,OAAO;gBACP,OAAO;gBACP,iBAAiB;gBACjB,qBAAqB;gBACrB,sBAAsB;gBACtB,cAAc;gBACd,UAAU;gBACV,iBAAiB;gBACjB,qBAAqB;gBACrB,aAAa;gBACb,eAAe;oBACb;oBACA;oBACA;oBACA;iBACD;gBACD,mBAAmB;oBACjB;oBACA;oBACA;oBACA;iBACD;gBACD,OACE;gBACF,UAAU;gBACV,aAAa;oBAAC;oBAAK;oBAAK;iBAAI;YAC9B;YACA;gBACE,IAAI;gBACJ,MAAM;gBACN,cAAc;gBACd,UAAU;gBACV,OAAO;gBACP,OAAO;gBACP,iBAAiB;gBACjB,qBAAqB;gBACrB,sBAAsB;gBACtB,cAAc;gBACd,UAAU;gBACV,iBAAiB;gBACjB,qBAAqB;gBACrB,aAAa;gBACb,eAAe;oBACb;oBACA;oBACA;oBACA;iBACD;gBACD,mBAAmB;oBACjB;oBACA;oBACA;oBACA;iBACD;gBACD,OACE;gBACF,UAAU;gBACV,aAAa;oBAAC;oBAAK;iBAAI;YACzB;YACA;gBACE,IAAI;gBACJ,MAAM;gBACN,cAAc;gBACd,UAAU;gBACV,OAAO;gBACP,OAAO;gBACP,iBAAiB;gBACjB,qBAAqB;gBACrB,sBAAsB;gBACtB,cAAc;gBACd,UAAU;gBACV,iBAAiB;gBACjB,qBAAqB;gBACrB,aAAa;gBACb,eAAe;oBACb;oBACA;oBACA;oBACA;iBACD;gBACD,mBAAmB;oBACjB;oBACA;oBACA;oBACA;iBACD;gBACD,OACE;gBACF,UAAU;gBACV,aAAa;oBAAC;oBAAK;iBAAI;YACzB;SACD;QACD,gBAAgB;IAClB,GAAG,EAAE;IAEL,MAAM,uBAAuB,CAAA,GAAA,qMAAA,CAAA,UAAO,AAAD,EAAE;QACnC,OAAO,aAAa,MAAM,CAAC,CAAC;YAC1B,MAAM,gBACJ,YAAY,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,WAAW,WAAW,OAC9D,YAAY,YAAY,CACrB,WAAW,GACX,QAAQ,CAAC,WAAW,WAAW,OAClC,YAAY,QAAQ,CAAC,WAAW,GAAG,QAAQ,CAAC,WAAW,WAAW;YAEpE,MAAM,kBACJ,mBAAmB,SAAS,YAAY,QAAQ,KAAK;YACvD,MAAM,cACJ,eAAe,SAAS,YAAY,eAAe,KAAK;YAE1D,OAAO,iBAAiB,mBAAmB;QAC7C;IACF,GAAG;QAAC;QAAc;QAAY;QAAgB;KAAW;IAEzD,MAAM,gBAAgB;QACpB,OAAQ;YACN,KAAK;gBACH,OAAO,qBAAqB,GAAG,CAAC,CAAC,IAAM,CAAC;wBACtC,GAAG,CAAC;wBACJ,GAAG,EAAE,eAAe;wBACpB,GAAG,EAAE,mBAAmB;oBAC1B,CAAC;YACH,KAAK;gBACH,OAAO,qBAAqB,GAAG,CAAC,CAAC,IAAM,CAAC;wBACtC,GAAG,CAAC;wBACJ,GAAG,EAAE,eAAe;wBACpB,GAAG,EAAE,oBAAoB;oBAC3B,CAAC;YACH;gBACE,OAAO,qBAAqB,GAAG,CAAC,CAAC,IAAM,CAAC;wBACtC,GAAG,CAAC;wBACJ,GAAG,EAAE,eAAe;wBACpB,GAAG,EAAE,mBAAmB;oBAC1B,CAAC;QACL;IACF;IAEA,MAAM,mBAAmB,CAAC;QACxB,OAAQ;YACN,KAAK;gBACH,OAAQ;oBACN,KAAK;wBACH,OAAO;oBACT,KAAK;wBACH,OAAO;oBACT,KAAK;wBACH,OAAO;oBACT,KAAK;wBACH,OAAO;oBACT;wBACE,OAAO;gBACX;YACF,KAAK;gBACH,OAAQ;oBACN,KAAK;wBACH,OAAO;oBACT,KAAK;wBACH,OAAO;oBACT,KAAK;wBACH,OAAO;oBACT,KAAK;wBACH,OAAO;oBACT;wBACE,OAAO;gBACX;YACF;gBACE,OAAO;QACX;IACF;IAEA,MAAM,mBAAmB,CAAC;QACxB,MAAM,SAAS;YACb,UAAU;YACV,UAAU;YACV,QAAQ;YACR,QAAQ;YACR,YAAY;YACZ,OAAO;YACP,WAAW;QACb;QACA,OAAO,MAAM,CAAC,SAAgC,IAAI;IACpD;IAEA,MAAM,0BAA0B,CAAC;QAC/B,uBAAuB;IACzB;IAEA,MAAM,gBAAgB;QACpB,IAAI,qBAAqB;YACvB,gBAAgB,CAAC,OACf,KAAK,MAAM,CAAC,CAAC,IAAM,EAAE,EAAE,KAAK,oBAAoB,EAAE;YAEpD,uBAAuB;YACvB,uBAAuB;QACzB;IACF;IAEA,MAAM,wBAAwB,CAAC;QAC7B,uBAAuB;QACvB,wBAAwB;IAC1B;IAEA,MAAM,wBAAwB,CAAC;QAC7B,IAAI,sBAAsB;YACxB,gBAAgB,CAAC,OACf,KAAK,GAAG,CAAC,CAAC,IAAO,EAAE,EAAE,KAAK,YAAY,EAAE,GAAG,cAAc;QAE7D,OAAO;YACL,gBAAgB,CAAC,OAAS;uBAAI;oBAAM;iBAAY;QAClD;QACA,uBAAuB;QACvB,wBAAwB;QACxB,uBAAuB;IACzB;IAEA,MAAM,mBAAmB;QACvB,uBAAuB;QACvB,wBAAwB;QACxB,uBAAuB;IACzB;IAEA,MAAM,cAAc,CAAC;QACnB,MAAM,UAAU;YACd,4BAAc,8OAAC,kMAAA,CAAA,OAAI;gBAAC,WAAU;;;;;;YAC9B,8BAAgB,8OAAC,sMAAA,CAAA,SAAM;gBAAC,WAAU;;;;;;YAClC,0BAAY,8OAAC,kNAAA,CAAA,aAAU;gBAAC,WAAU;;;;;;YAClC,0BAAY,8OAAC,0MAAA,CAAA,WAAQ;gBAAC,WAAU;;;;;;YAChC,wBAAU,8OAAC,oMAAA,CAAA,QAAK;gBAAC,WAAU;;;;;;YAC3B,uBAAS,8OAAC,kNAAA,CAAA,YAAS;gBAAC,WAAU;;;;;;YAC9B,yBAAW,8OAAC,wMAAA,CAAA,UAAO;gBAAC,WAAU;;;;;;QAChC;QACA,OACE,OAAO,CAAC,KAA6B,kBAAI,8OAAC,kMAAA,CAAA,OAAI;YAAC,WAAU;;;;;;IAE7D;IAEA,MAAM,eAAe,CAAC;QACpB,OACE,0BAA0B,CACxB,KACD,EAAE,SAAS;IAEhB;IAEA,8CAA8C;IAC9C,MAAM,cAAc;QAClB,MAAM,CAAC,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;YAAE,OAAO;YAAK,QAAQ;QAAI;QACxD,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;QAE9D,wCAAwC;QACxC,MAAM,cAAc,CAAA,GAAA,qMAAA,CAAA,UAAO,AAAD,EAAE;YAC1B,MAAM,QAAQ,qBAAqB,GAAG,CAAC,CAAC,aAAa,QAAU,CAAC;oBAC9D,IAAI,YAAY,EAAE;oBAClB,MAAM,YAAY,IAAI;oBACtB,cAAc,YAAY,YAAY;oBACtC,MAAM,YAAY,eAAe;oBACjC,iBAAiB,YAAY,eAAe;oBAC5C,qBAAqB,YAAY,mBAAmB;oBACpD,sBAAsB,YAAY,oBAAoB;oBACtD,UAAU,YAAY,QAAQ;oBAC9B,cAAc,YAAY,YAAY;oBACtC,GAAG,MAAM,AAAC,QAAQ,IAAK,MAAM,KAAK,MAAM,KAAK;oBAC7C,GAAG,MAAM,KAAK,KAAK,CAAC,QAAQ,KAAK,MAAM,KAAK,MAAM,KAAK;gBACzD,CAAC;YAED,MAAM,QAAe,EAAE;YACvB,qBAAqB,OAAO,CAAC,CAAA;gBAC3B,YAAY,WAAW,CAAC,OAAO,CAAC,CAAA;oBAC9B,MAAM,aAAa,MAAM,IAAI,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK;oBAC5C,IAAI,YAAY;wBACd,MAAM,IAAI,CAAC;4BACT,QAAQ,YAAY,EAAE;4BACtB,QAAQ;4BACR,UAAU,KAAK,MAAM,KAAK,MAAM,IAAI,2BAA2B;wBACjE;oBACF;gBACF;YACF;YAEA,OAAO;gBAAE;gBAAO;YAAM;QACxB,GAAG;YAAC;SAAqB;QAEzB,0CAA0C;QAC1C,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;YACR,IAAI;YACJ,MAAM,WAAW;gBACf,oCAAoC;gBACpC,YAAY,KAAK,CAAC,OAAO,CAAC,CAAC,MAAM;oBAC/B,IAAI,KAAK,GAAG,KAAK;oBAEjB,0BAA0B;oBAC1B,YAAY,KAAK,CAAC,OAAO,CAAC,CAAC,OAAO;wBAChC,IAAI,MAAM,GAAG;4BACX,MAAM,KAAK,KAAK,CAAC,GAAG,MAAM,CAAC;4BAC3B,MAAM,KAAK,KAAK,CAAC,GAAG,MAAM,CAAC;4BAC3B,MAAM,WAAW,KAAK,IAAI,CAAC,KAAK,KAAK,KAAK,OAAO;4BACjD,MAAM,QAAQ,OAAO,CAAC,WAAW,QAAQ;4BACzC,MAAM,AAAC,KAAK,WAAY;4BACxB,MAAM,AAAC,KAAK,WAAY;wBAC1B;oBACF;oBAEA,uBAAuB;oBACvB,MAAM,UAAU,WAAW,KAAK,GAAG;oBACnC,MAAM,UAAU,WAAW,MAAM,GAAG;oBACpC,MAAM,YAAY,CAAC,UAAU,KAAK,CAAC,IAAI;oBACvC,MAAM,YAAY,CAAC,UAAU,KAAK,CAAC,IAAI;oBACvC,MAAM;oBACN,MAAM;oBAEN,4BAA4B;oBAC5B,KAAK,CAAC,IAAI,KAAK;oBACf,KAAK,CAAC,IAAI,KAAK;oBAEf,uBAAuB;oBACvB,KAAK,CAAC,GAAG,KAAK,GAAG,CAAC,IAAI,KAAK,GAAG,CAAC,WAAW,KAAK,GAAG,IAAI,KAAK,CAAC;oBAC5D,KAAK,CAAC,GAAG,KAAK,GAAG,CAAC,IAAI,KAAK,GAAG,CAAC,WAAW,MAAM,GAAG,IAAI,KAAK,CAAC;gBAC/D;gBAEA,cAAc,sBAAsB;YACtC;YAEA,MAAM,QAAQ,WAAW;gBACvB;gBACA,WAAW,IAAM,qBAAqB,cAAc,OAAO,uBAAuB;YACpF,GAAG;YAEH,OAAO;gBACL,aAAa;gBACb,IAAI,aAAa,qBAAqB;YACxC;QACF,GAAG;YAAC;YAAa;SAAW;QAE5B,MAAM,gBAAgB,CAAC;YACrB,OAAO,KAAK,GAAG,CAAC,GAAG,kBAAkB,IAAI;QAC3C;QAEA,MAAM,uBAAuB,CAAC;YAC5B,OAAQ;gBACN,KAAK;oBAAQ,OAAO;gBACpB,KAAK;oBAAY,OAAO;gBACxB,KAAK;oBAAW,OAAO;gBACvB;oBAAS,OAAO;YAClB;QACF;QAEA,MAAM,eAAe,CAAC,YAAiB;YACrC,IAAI,WAAW,YAAY,KAAK,UAAU,WAAW,YAAY,KAAK,QAAQ;gBAC5E,OAAO;YACT;YACA,OAAO;QACT;QAEA,MAAM,eAAe,CAAA,GAAA,qMAAA,CAAA,UAAO,AAAD,EAAE;YAC3B,MAAM,mBAAmB,YAAY,KAAK,CAAC,MAAM;YACjD,MAAM,iBAAiB,qBAAqB,MAAM,GAAG,IACnD,AAAC,mBAAmB,IAAK,qBAAqB,MAAM,GAAG;YAEzD,MAAM,gBAAgB,qBAAqB,MAAM,CAAC,CAAC,KAAK,UACtD,QAAQ,WAAW,CAAC,MAAM,GAAG,IAAI,WAAW,CAAC,MAAM,GAAG,UAAU,KAChE,oBAAoB,CAAC,EAAE,IAAI;gBAAE,MAAM;gBAAO,aAAa,EAAE;YAAC;YAG5D,MAAM,wBAAwB,qBAAqB,MAAM,CAAC,CAAC,KAAK;gBAC9D,MAAM,OAAO,EAAE,eAAe,IAAI,IAAI,SAAS,EAAE,eAAe,IAAI,IAAI,WAAW;gBACnF,GAAG,CAAC,KAAK,GAAG,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,IAAI;gBAC/B,OAAO;YACT,GAAG,CAAC;YAEJ,OAAO;gBACL;gBACA,gBAAgB,KAAK,KAAK,CAAC,iBAAiB,MAAM;gBAClD,eAAe,cAAc,IAAI;gBACjC,eAAe,sBAAsB,IAAI,IAAI;gBAC7C,UAAU,KAAK,IAAI,CAAC,qBAAqB,MAAM,GAAG,GAAG,gCAAgC;YACvF;QACF,GAAG;YAAC;YAAsB;SAAY;QAEtC,qBACE,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAG,WAAU;sCAAwB;;;;;;sCACtC,8OAAC;4BAAI,WAAU;;gCACZ,qBAAqB,MAAM;gCAAC;gCAAS,YAAY,KAAK,CAAC,MAAM;gCAAC;;;;;;;;;;;;;8BAKnE,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAI,WAAU;8CAAoC,aAAa,gBAAgB;;;;;;8CAChF,8OAAC;oCAAI,WAAU;8CAAwB;;;;;;;;;;;;sCAEzC,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAI,WAAU;8CAAqC,aAAa,cAAc;;;;;;8CAC/E,8OAAC;oCAAI,WAAU;8CAAyB;;;;;;;;;;;;sCAE1C,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAI,WAAU;8CAAsC,aAAa,aAAa;;;;;;8CAC/E,8OAAC;oCAAI,WAAU;8CAA0B;;;;;;;;;;;;sCAE3C,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAI,WAAU;8CAAsC,aAAa,QAAQ;;;;;;8CAC1E,8OAAC;oCAAI,WAAU;8CAA0B;;;;;;;;;;;;;;;;;;8BAK7C,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAI,WAAU;;;;;;8CACf,8OAAC;8CAAK;;;;;;;;;;;;sCAER,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAI,WAAU;;;;;;8CACf,8OAAC;8CAAK;;;;;;;;;;;;sCAER,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAI,WAAU;;;;;;8CACf,8OAAC;8CAAK;;;;;;;;;;;;sCAER,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAI,WAAU;;;;;;8CACf,8OAAC;8CAAK;;;;;;;;;;;;sCAER,8OAAC;4BAAI,WAAU;sCAAgB;;;;;;;;;;;;8BAMjC,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC;wBACC,OAAO,WAAW,KAAK;wBACvB,QAAQ,WAAW,MAAM;wBACzB,WAAU;;0CAGV,8OAAC;gCAAK,OAAM;gCAAO,QAAO;gCAAO,MAAK;;;;;;0CAGtC,8OAAC;0CACC,cAAA,8OAAC;oCAAQ,IAAG;oCAAO,OAAM;oCAAK,QAAO;oCAAK,cAAa;8CACrD,cAAA,8OAAC;wCAAK,GAAE;wCAAoB,MAAK;wCAAO,QAAO;wCAAU,aAAY;;;;;;;;;;;;;;;;0CAGzE,8OAAC;gCAAK,OAAM;gCAAO,QAAO;gCAAO,MAAK;;;;;;4BAGrC,YAAY,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM;gCAC5B,MAAM,aAAa,YAAY,KAAK,CAAC,IAAI,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK,KAAK,MAAM;gCACnE,MAAM,aAAa,YAAY,KAAK,CAAC,IAAI,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK,KAAK,MAAM;gCACnE,IAAI,CAAC,cAAc,CAAC,YAAY,OAAO;gCAEvC,qBACE,8OAAC;oCAEC,IAAI,WAAW,CAAC;oCAChB,IAAI,WAAW,CAAC;oCAChB,IAAI,WAAW,CAAC;oCAChB,IAAI,WAAW,CAAC;oCAChB,QAAQ,aAAa,YAAY;oCACjC,aAAa,KAAK,QAAQ,GAAG;oCAC7B,eAAe;mCAPV,CAAC,KAAK,EAAE,OAAO;;;;;4BAU1B;4BAGC,YAAY,KAAK,CAAC,GAAG,CAAC,CAAC;gCACtB,MAAM,aAAa,qBAAqB,OAAO,KAAK,EAAE;gCACtD,MAAM,YAAY,gBAAgB,KAAK,EAAE;gCACzC,MAAM,SAAS,cAAc,KAAK,eAAe;gCAEjD,qBACE,8OAAC;;sDAEC,8OAAC;4CACC,IAAI,KAAK,CAAC,GAAG;4CACb,IAAI,KAAK,CAAC,GAAG;4CACb,GAAG;4CACH,MAAK;;;;;;wCAIN,4BACC,8OAAC;4CACC,IAAI,KAAK,CAAC;4CACV,IAAI,KAAK,CAAC;4CACV,GAAG,SAAS;4CACZ,MAAK;4CACL,QAAO;4CACP,aAAY;4CACZ,iBAAgB;sDAEhB,cAAA,8OAAC;gDACC,eAAc;gDACd,eAAc;gDACd,MAAK;gDACL,MAAM,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,EAAE;gDAC7B,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,EAAE;gDAC7B,KAAI;gDACJ,aAAY;;;;;;;;;;;sDAMlB,8OAAC;4CACC,IAAI,KAAK,CAAC;4CACV,IAAI,KAAK,CAAC;4CACV,GAAG;4CACH,MAAM,qBAAqB,KAAK,YAAY;4CAC5C,QAAQ,aAAa,KAAK,IAAI;4CAC9B,aAAa,YAAY,IAAI;4CAC7B,WAAU;4CACV,SAAS,IAAM,uBAAuB,qBAAqB,IAAI,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK,KAAK,EAAE,KAAK;4CAC1F,cAAc,IAAM,eAAe,KAAK,EAAE;4CAC1C,cAAc,IAAM,eAAe;4CACnC,OAAO;gDACL,QAAQ,YAAY,oBAAoB;gDACxC,WAAW,YAAY,eAAe;gDACtC,iBAAiB,GAAG,KAAK,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC;4CAC5C;;;;;;sDAIF,8OAAC;4CACC,GAAG,KAAK,CAAC;4CACT,GAAG,KAAK,CAAC,GAAG,SAAS;4CACrB,YAAW;4CACX,WAAU;4CACV,OAAO;gDAAE,UAAU;4CAAO;sDAEzB,KAAK,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;;;;;;sDAI1B,8OAAC;4CACC,GAAG,KAAK,CAAC;4CACT,GAAG,KAAK,CAAC,GAAG;4CACZ,YAAW;4CACX,WAAU;sDAET,KAAK,eAAe;;;;;;wCAItB,2BACC,8OAAC;;8DACC,8OAAC;oDACC,GAAG,KAAK,CAAC,GAAG;oDACZ,GAAG,KAAK,CAAC,GAAG,SAAS;oDACrB,OAAM;oDACN,QAAO;oDACP,MAAK;oDACL,IAAG;oDACH,WAAU;;;;;;8DAEZ,8OAAC;oDACC,GAAG,KAAK,CAAC;oDACT,GAAG,KAAK,CAAC,GAAG,SAAS;oDACrB,YAAW;oDACX,WAAU;8DAET,KAAK,IAAI;;;;;;8DAEZ,8OAAC;oDACC,GAAG,KAAK,CAAC;oDACT,GAAG,KAAK,CAAC,GAAG,SAAS;oDACrB,YAAW;oDACX,WAAU;8DAET,KAAK,YAAY;;;;;;;;;;;;;mCAlGlB,KAAK,EAAE;;;;;4BAwGnB;;;;;;;;;;;;8BAKJ,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAG,WAAU;sCAAmC;;;;;;sCACjD,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;;sDACC,8OAAC;sDAAO;;;;;;wCAAwB;wCAAE,aAAa,aAAa;sDAC5D,8OAAC;4CAAI,WAAU;;gDAAgB;gDACnB,qBAAqB,IAAI,CAAC,CAAA,IAAK,EAAE,IAAI,KAAK,aAAa,aAAa,GAAG,YAAY,UAAU;gDAAE;;;;;;;;;;;;;8CAG7G,8OAAC;;sDACC,8OAAC;sDAAO;;;;;;wCAAyB;wCAAE,KAAK,KAAK,CAAC,AAAC,aAAa,gBAAgB,GAAG,CAAC,qBAAqB,MAAM,GAAG,CAAC,qBAAqB,MAAM,GAAG,CAAC,IAAI,CAAC,IAAK;wCAAK;sDAC7J,8OAAC;4CAAI,WAAU;sDAAgB;;;;;;;;;;;;8CAIjC,8OAAC;;sDACC,8OAAC;sDAAO;;;;;;sDACR,8OAAC;4CAAI,WAAU;;gDACZ,qBAAqB,MAAM,CAAC,CAAA,IAAK,EAAE,YAAY,KAAK,QAAQ,MAAM;gDAAC;gDAAU;gDAC7E,qBAAqB,MAAM,CAAC,CAAA,IAAK,EAAE,YAAY,KAAK,WAAW,MAAM;gDAAC;gDAAW;gDACjF,qBAAqB,MAAM,CAAC,CAAA,IAAK,EAAE,YAAY,KAAK,YAAY,MAAM;gDAAC;;;;;;;;;;;;;8CAG5E,8OAAC;;sDACC,8OAAC;sDAAO;;;;;;sDACR,8OAAC;4CAAI,WAAU;;gDACZ,aAAa,aAAa;gDAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAO1C;IAEA,MAAM,eAAe,CAAC,EACpB,KAAK,EACL,KAAK,EACL,QAAQ,EACR,SAAS,EAMV;QACC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;QACzC,MAAM,SAAS,iBAAiB,CAAC,UAAU;QAE3C,qBACE,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAM,WAAU;8CAA6B;;;;;;8CAC9C,8OAAC;oCACC,MAAK;oCACL,cAAc,IAAM,YAAY;oCAChC,cAAc,IAAM,YAAY;oCAChC,WAAU;8CAEV,cAAA,8OAAC,8NAAA,CAAA,aAAU;wCAAC,WAAU;;;;;;;;;;;;;;;;;sCAG1B,8OAAC;4BAAK,WAAU;;gCAAqC;gCAAM;;;;;;;;;;;;;8BAG7D,8OAAC;oBACC,MAAK;oBACL,KAAI;oBACJ,KAAI;oBACJ,OAAO;oBACP,UAAU,CAAC,IAAM,SAAS,SAAS,EAAE,MAAM,CAAC,KAAK;oBACjD,WAAU;;;;;;8BAGZ,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;sCAAK;;;;;;sCACN,8OAAC;sCAAK;;;;;;sCACN,8OAAC;sCAAK;;;;;;;;;;;;gBAGP,0BACC,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAE,WAAU;sCAA4B,OAAO,WAAW;;;;;;sCAC3D,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;;sDAAI,8OAAC;sDAAO;;;;;;wCAAa;wCAAE,OAAO,KAAK,CAAC,GAAG;;;;;;;8CAC5C,8OAAC;;sDAAI,8OAAC;sDAAO;;;;;;wCAAa;wCAAE,OAAO,KAAK,CAAC,MAAM;;;;;;;8CAC/C,8OAAC;;sDAAI,8OAAC;sDAAO;;;;;;wCAAc;wCAAE,OAAO,KAAK,CAAC,IAAI;;;;;;;;;;;;;;;;;;;;;;;;;IAM1D;IAEA,MAAM,kBAAkB,CAAC,EACvB,WAAW,EACX,MAAM,EACN,QAAQ,EAKT;QACC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EACrC,eAAe;YACb,MAAM;YACN,cAAc;YACd,UAAU;YACV,OAAO;YACP,OAAO;YACP,iBAAiB;YACjB,qBAAqB;YACrB,sBAAsB;YACtB,cAAc;YACd,UAAU;YACV,iBAAiB;YACjB,qBAAqB;YACrB,aAAa;YACb,eAAe,EAAE;YACjB,mBAAmB,EAAE;YACrB,OAAO;YACP,UAAU;YACV,aAAa,EAAE;QACjB;QAGF,MAAM,eAAe;YACnB,MAAM,iBAA8B;gBAClC,GAAG,QAAQ;gBACX,IAAI,aAAa,MAAM,KAAK,GAAG,GAAG,QAAQ;gBAC1C,MAAM,SAAS,IAAI,IAAI;gBACvB,cAAc,SAAS,YAAY,IAAI;gBACvC,UAAU,SAAS,QAAQ,IAAI;gBAC/B,OAAO,SAAS,KAAK,IAAI;gBACzB,OAAO,SAAS,KAAK,IAAI;gBACzB,iBAAiB,SAAS,eAAe,IAAI;gBAC7C,qBAAqB,SAAS,mBAAmB,IAAI;gBACrD,sBAAsB,SAAS,oBAAoB,IAAI;gBACvD,cAAc,SAAS,YAAY,IAAI;gBACvC,UAAU,SAAS,QAAQ,IAAI;gBAC/B,iBAAiB,SAAS,eAAe,IAAI;gBAC7C,qBAAqB,SAAS,mBAAmB,IAAI;gBACrD,aAAa,SAAS,WAAW,IAAI;gBACrC,eAAe,SAAS,aAAa,IAAI,EAAE;gBAC3C,mBAAmB,SAAS,iBAAiB,IAAI,EAAE;gBACnD,OAAO,SAAS,KAAK,IAAI;gBACzB,UAAU,SAAS,QAAQ,IAAI;gBAC/B,aAAa,SAAS,WAAW,IAAI,EAAE;YACzC;YACA,OAAO;QACT;QAEA,qBACE,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCACX,cAAc,qBAAqB;;;;;;kCAGtC,8OAAC;wBAAI,WAAU;;0CAEb,8OAAC;;kDACC,8OAAC;wCAAG,WAAU;kDAAyC;;;;;;kDACvD,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;;kEACC,8OAAC;wDAAM,WAAU;kEAAiC;;;;;;kEAClD,8OAAC;wDACC,MAAK;wDACL,OAAO,SAAS,IAAI,IAAI;wDACxB,UAAU,CAAC,IACT,YAAY;gEAAE,GAAG,QAAQ;gEAAE,MAAM,EAAE,MAAM,CAAC,KAAK;4DAAC;wDAElD,WAAU;wDACV,QAAQ;;;;;;;;;;;;0DAIZ,8OAAC;;kEACC,8OAAC;wDAAM,WAAU;kEAAiC;;;;;;kEAGlD,8OAAC;wDACC,MAAK;wDACL,OAAO,SAAS,YAAY,IAAI;wDAChC,UAAU,CAAC,IACT,YAAY;gEAAE,GAAG,QAAQ;gEAAE,cAAc,EAAE,MAAM,CAAC,KAAK;4DAAC;wDAE1D,WAAU;wDACV,QAAQ;;;;;;;;;;;;0DAIZ,8OAAC;;kEACC,8OAAC;wDAAM,WAAU;kEAAiC;;;;;;kEAGlD,8OAAC;wDACC,MAAK;wDACL,OAAO,SAAS,QAAQ,IAAI;wDAC5B,UAAU,CAAC,IACT,YAAY;gEAAE,GAAG,QAAQ;gEAAE,UAAU,EAAE,MAAM,CAAC,KAAK;4DAAC;wDAEtD,WAAU;;;;;;;;;;;;0DAId,8OAAC;;kEACC,8OAAC;wDAAM,WAAU;kEAAiC;;;;;;kEAGlD,8OAAC;wDACC,MAAK;wDACL,OAAO,SAAS,QAAQ,IAAI;wDAC5B,UAAU,CAAC,IACT,YAAY;gEAAE,GAAG,QAAQ;gEAAE,UAAU,EAAE,MAAM,CAAC,KAAK;4DAAC;wDAEtD,WAAU;;;;;;;;;;;;0DAId,8OAAC;;kEACC,8OAAC;wDAAM,WAAU;kEAAiC;;;;;;kEAClD,8OAAC;wDACC,MAAK;wDACL,OAAO,SAAS,KAAK,IAAI;wDACzB,UAAU,CAAC,IACT,YAAY;gEAAE,GAAG,QAAQ;gEAAE,OAAO,EAAE,MAAM,CAAC,KAAK;4DAAC;wDAEnD,WAAU;;;;;;;;;;;;0DAId,8OAAC;;kEACC,8OAAC;wDAAM,WAAU;kEAAiC;;;;;;kEAClD,8OAAC;wDACC,MAAK;wDACL,OAAO,SAAS,KAAK,IAAI;wDACzB,UAAU,CAAC,IACT,YAAY;gEAAE,GAAG,QAAQ;gEAAE,OAAO,EAAE,MAAM,CAAC,KAAK;4DAAC;wDAEnD,WAAU;;;;;;;;;;;;;;;;;;;;;;;;0CAOlB,8OAAC;;kDACC,8OAAC;wCAAG,WAAU;kDAAyC;;;;;;kDACvD,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;;kEACC,8OAAC;wDAAM,WAAU;kEAAiC;;;;;;kEAGlD,8OAAC;wDACC,OAAO,SAAS,QAAQ,IAAI;wDAC5B,UAAU,CAAC,IACT,YAAY;gEACV,GAAG,QAAQ;gEACX,UAAU,EAAE,MAAM,CAAC,KAAK;4DAC1B;wDAEF,WAAU;;0EAEV,8OAAC;gEAAO,OAAM;0EAAW;;;;;;0EACzB,8OAAC;gEAAO,OAAM;0EAAW;;;;;;0EACzB,8OAAC;gEAAO,OAAM;0EAAS;;;;;;0EACvB,8OAAC;gEAAO,OAAM;0EAAS;;;;;;0EACvB,8OAAC;gEAAO,OAAM;0EAAa;;;;;;0EAC3B,8OAAC;gEAAO,OAAM;0EAAQ;;;;;;0EACtB,8OAAC;gEAAO,OAAM;0EAAY;;;;;;;;;;;;;;;;;;0DAI9B,8OAAC;;kEACC,8OAAC;wDAAI,WAAU;;0EACb,8OAAC;gEAAM,WAAU;0EAA4B;;;;;;0EAG7C,8OAAC;gEACC,MAAK;gEACL,SAAS,IAAM,iBAAiB;gEAChC,WAAU;;kFAEV,8OAAC,gMAAA,CAAA,MAAG;wEAAC,WAAU;;;;;;kFACf,8OAAC;kFAAK;;;;;;;;;;;;;;;;;;kEAGV,8OAAC;wDACC,OAAO,SAAS,eAAe,IAAI;wDACnC,UAAU,CAAC,IACT,YAAY;gEACV,GAAG,QAAQ;gEACX,iBAAiB,EAAE,MAAM,CAAC,KAAK;4DACjC;wDAEF,WAAU;kEAET,OAAO,OAAO,CAAC,4BAA4B,GAAG,CAC7C,CAAC,CAAC,KAAK,IAAI,iBACT,8OAAC;gEAAiB,OAAO;0EACtB,IAAI,KAAK;+DADC;;;;;;;;;;oDAMlB,SAAS,eAAe,kBACvB,8OAAC;wDAAI,WAAU;kEACb,cAAA,8OAAC;4DAAE,WAAU;;8EACX,8OAAC;;wEAEG,0BAA0B,CACxB,SAAS,eAAe,CACzB,EAAE;wEACJ;;;;;;;gEACO;gEAER,0BAA0B,CACxB,SAAS,eAAe,CACzB,EAAE;;;;;;;;;;;;;;;;;;0DAOb,8OAAC;;kEACC,8OAAC;wDAAM,WAAU;kEAAiC;;;;;;kEAGlD,8OAAC;wDACC,OAAO,SAAS,YAAY,IAAI;wDAChC,UAAU,CAAC,IACT,YAAY;gEACV,GAAG,QAAQ;gEACX,cAAc,EAAE,MAAM,CAAC,KAAK;4DAC9B;wDAEF,WAAU;;0EAEV,8OAAC;gEAAO,OAAM;0EAAO;;;;;;0EACrB,8OAAC;gEAAO,OAAM;0EAAU;;;;;;0EACxB,8OAAC;gEAAO,OAAM;0EAAW;;;;;;0EACzB,8OAAC;gEAAO,OAAM;0EAAU;;;;;;;;;;;;;;;;;;0DAI5B,8OAAC;;kEACC,8OAAC;wDAAM,WAAU;kEAAiC;;;;;;kEAGlD,8OAAC;wDACC,OAAO,SAAS,mBAAmB,IAAI;wDACvC,UAAU,CAAC,IACT,YAAY;gEACV,GAAG,QAAQ;gEACX,qBAAqB,EAAE,MAAM,CAAC,KAAK;4DACrC;wDAEF,WAAU;;0EAEV,8OAAC;gEAAO,OAAM;0EAAS;;;;;;0EACvB,8OAAC;gEAAO,OAAM;0EAAU;;;;;;0EACxB,8OAAC;gEAAO,OAAM;0EAAY;;;;;;0EAC1B,8OAAC;gEAAO,OAAM;0EAAW;;;;;;0EACzB,8OAAC;gEAAO,OAAM;0EAAY;;;;;;;;;;;;;;;;;;0DAI9B,8OAAC;gDAAI,WAAU;;kEACb,8OAAC;wDAAM,WAAU;kEAAiC;;;;;;kEAGlD,8OAAC;wDACC,MAAK;wDACL,OAAO,SAAS,WAAW,IAAI;wDAC/B,UAAU,CAAC,IACT,YAAY;gEAAE,GAAG,QAAQ;gEAAE,aAAa,EAAE,MAAM,CAAC,KAAK;4DAAC;wDAEzD,WAAU;;;;;;;;;;;;;;;;;;;;;;;;0CAOlB,8OAAC;;kDACC,8OAAC;wCAAG,WAAU;kDAAyC;;;;;;kDACvD,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;gDACC,OAAM;gDACN,OAAO,SAAS,eAAe,IAAI;gDACnC,UAAU,CAAC,QAAU,YAAY;wDAAE,GAAG,QAAQ;wDAAE,iBAAiB;oDAAM;gDACvE,WAAU;;;;;;0DAEZ,8OAAC;gDACC,OAAM;gDACN,OAAO,SAAS,mBAAmB,IAAI;gDACvC,UAAU,CAAC,QAAU,YAAY;wDAAE,GAAG,QAAQ;wDAAE,qBAAqB;oDAAM;gDAC3E,WAAU;;;;;;0DAEZ,8OAAC;gDACC,OAAM;gDACN,OAAO,SAAS,oBAAoB,IAAI;gDACxC,UAAU,CAAC,QAAU,YAAY;wDAAE,GAAG,QAAQ;wDAAE,sBAAsB;oDAAM;gDAC5E,WAAU;;;;;;;;;;;;;;;;;;0CAMhB,8OAAC;;kDACC,8OAAC;wCAAG,WAAU;kDAAyC;;;;;;kDACvD,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;;kEACC,8OAAC;wDAAM,WAAU;kEAAiC;;;;;;kEAGlD,8OAAC;wDACC,MAAK;wDACL,OAAO,SAAS,aAAa,EAAE,KAAK,SAAS;wDAC7C,UAAU,CAAC,IACT,YAAY;gEACV,GAAG,QAAQ;gEACX,eAAe,EAAE,MAAM,CAAC,KAAK,CAC1B,KAAK,CAAC,KACN,GAAG,CAAC,CAAC,IAAM,EAAE,IAAI;4DACtB;wDAEF,WAAU;wDACV,aAAY;;;;;;kEAEd,8OAAC;wDAAE,WAAU;kEAA6B;;;;;;;;;;;;0DAG5C,8OAAC;;kEACC,8OAAC;wDAAM,WAAU;kEAAiC;;;;;;kEAGlD,8OAAC;wDACC,MAAK;wDACL,OAAO,SAAS,iBAAiB,EAAE,KAAK,SAAS;wDACjD,UAAU,CAAC,IACT,YAAY;gEACV,GAAG,QAAQ;gEACX,mBAAmB,EAAE,MAAM,CAAC,KAAK,CAC9B,KAAK,CAAC,KACN,GAAG,CAAC,CAAC,IAAM,EAAE,IAAI;4DACtB;wDAEF,WAAU;wDACV,aAAY;;;;;;kEAEd,8OAAC;wDAAE,WAAU;kEAA6B;;;;;;;;;;;;0DAG5C,8OAAC;;kEACC,8OAAC;wDAAM,WAAU;kEAAiC;;;;;;kEAClD,8OAAC;wDACC,OAAO,SAAS,KAAK,IAAI;wDACzB,UAAU,CAAC,IACT,YAAY;gEAAE,GAAG,QAAQ;gEAAE,OAAO,EAAE,MAAM,CAAC,KAAK;4DAAC;wDAEnD,WAAU;wDACV,MAAM;wDACN,aAAY;;;;;;;;;;;;;;;;;;;;;;;;0CAMpB,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCACC,MAAK;wCACL,SAAS;wCACT,WAAU;kDACX;;;;;;kDAGD,8OAAC;wCACC,MAAK;wCACL,SAAS;wCACT,WAAU;;4CAET,cAAc,WAAW;4CAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAO9C;IAEA,MAAM,qBAAqB,CAAC,EAC1B,WAAW,EAGZ;QACC,MAAM,cAAc,aAAa,MAAM,CAAC,CAAC,IACvC,YAAY,WAAW,CAAC,QAAQ,CAAC,EAAE,EAAE;QAGvC,qBACE,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCACC,WAAU;oCACV,OAAO;wCACL,iBACE,aAAa,YAAY,eAAe,IAAI;oCAChD;8CAEC,YAAY,YAAY,eAAe;;;;;;8CAE1C,8OAAC;;sDACC,8OAAC;4CAAG,WAAU;sDAAyB,YAAY,IAAI;;;;;;sDACvD,8OAAC;4CAAE,WAAU;;gDACV,YAAY,QAAQ;gDAAC;gDAAK,YAAY,YAAY;;;;;;;sDAErD,8OAAC;4CAAI,WAAU;;8DACb,8OAAC;oDACC,WAAU;oDACV,OAAO;wDACL,iBAAiB,aAAa,YAAY,eAAe;oDAC3D;8DAGE,0BAA0B,CACxB,YAAY,eAAe,CAC5B,EAAE;;;;;;8DAGP,8OAAC;oDACC,WAAW,CAAC,2CAA2C,EACrD,YAAY,YAAY,KAAK,SACzB,gCACA,YAAY,YAAY,KAAK,YAC7B,8BACA,YAAY,YAAY,KAAK,aAC7B,4BACA,iCACJ;8DAED,YAAY,YAAY,CAAC,MAAM,CAAC,GAAG,WAAW,KAC7C,YAAY,YAAY,CAAC,KAAK,CAAC;;;;;;;;;;;;;;;;;;;;;;;;sCAKzC,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCACC,SAAS,IAAM,sBAAsB;oCACrC,WAAU;8CAEV,cAAA,8OAAC,2MAAA,CAAA,OAAI;wCAAC,WAAU;;;;;;;;;;;8CAElB,8OAAC;oCACC,SAAS,IAAM,wBAAwB;oCACvC,WAAU;8CAEV,cAAA,8OAAC,0MAAA,CAAA,SAAM;wCAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;;8BAKxB,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;;8CACC,8OAAC;oCAAG,WAAU;8CAAmC;;;;;;8CACjD,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;;8DACC,8OAAC;oDAAK,WAAU;8DAAgB;;;;;;gDAAc;8DAC9C,8OAAC;oDAAK,WAAU;8DAAe,YAAY,KAAK;;;;;;;;;;;;sDAElD,8OAAC;;8DACC,8OAAC;oDAAK,WAAU;8DAAgB;;;;;;gDAAc;8DAC9C,8OAAC;oDAAK,WAAU;8DAAe,YAAY,KAAK;;;;;;;;;;;;sDAElD,8OAAC;;8DACC,8OAAC;oDAAK,WAAU;8DAAgB;;;;;;gDAAiB;8DACjD,8OAAC;oDAAK,WAAU;8DAAe,YAAY,QAAQ;;;;;;;;;;;;sDAErD,8OAAC;;8DACC,8OAAC;oDAAK,WAAU;8DAAgB;;;;;;gDAAqB;8DACrD,8OAAC;oDAAK,WAAU;8DAAe,YAAY,WAAW;;;;;;;;;;;;;;;;;;;;;;;;sCAK5D,8OAAC;;8CACC,8OAAC;oCAAG,WAAU;8CAAmC;;;;;;8CACjD,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CAAI,WAAU;;8DACb,8OAAC;oDAAK,WAAU;8DAAwB;;;;;;8DACxC,8OAAC;oDAAI,WAAU;;sEACb,8OAAC;4DAAI,WAAU;sEACb,cAAA,8OAAC;gEACC,WAAU;gEACV,OAAO;oEAAE,OAAO,GAAG,AAAC,YAAY,eAAe,GAAG,KAAM,IAAI,CAAC,CAAC;gEAAC;;;;;;;;;;;sEAGnE,8OAAC;4DAAK,WAAU;;gEAAuB,YAAY,eAAe;gEAAC;;;;;;;;;;;;;;;;;;;sDAGvE,8OAAC;4CAAI,WAAU;;8DACb,8OAAC;oDAAK,WAAU;8DAAwB;;;;;;8DACxC,8OAAC;oDAAI,WAAU;;sEACb,8OAAC;4DAAI,WAAU;sEACb,cAAA,8OAAC;gEACC,WAAU;gEACV,OAAO;oEAAE,OAAO,GAAG,AAAC,YAAY,mBAAmB,GAAG,KAAM,IAAI,CAAC,CAAC;gEAAC;;;;;;;;;;;sEAGvE,8OAAC;4DAAK,WAAU;;gEAAuB,YAAY,mBAAmB;gEAAC;;;;;;;;;;;;;;;;;;;sDAG3E,8OAAC;4CAAI,WAAU;;8DACb,8OAAC;oDAAK,WAAU;8DAAwB;;;;;;8DACxC,8OAAC;oDAAI,WAAU;;sEACb,8OAAC;4DAAI,WAAU;sEACb,cAAA,8OAAC;gEACC,WAAU;gEACV,OAAO;oEAAE,OAAO,GAAG,AAAC,YAAY,oBAAoB,GAAG,KAAM,IAAI,CAAC,CAAC;gEAAC;;;;;;;;;;;sEAGxE,8OAAC;4DAAK,WAAU;;gEAAuB,YAAY,oBAAoB;gEAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8BAOlF,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAG,WAAU;sCAAmC;;;;;;sCACjD,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC;gCAAE,WAAU;;kDACX,8OAAC;;4CAEG,0BAA0B,CACxB,YAAY,eAAe,CAC5B,EAAE;4CACJ;;;;;;;oCACO;oCAER,0BAA0B,CACxB,YAAY,eAAe,CAC5B,EAAE;;;;;;;;;;;;;;;;;;8BAMX,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAG,WAAU;sCAAmC;;;;;;sCACjD,8OAAC;4BAAI,WAAU;sCACZ,YAAY,aAAa,CAAC,GAAG,CAAC,CAAC,UAAU,sBACxC,8OAAC;oCAEC,WAAU;8CAET;mCAHI;;;;;;;;;;;;;;;;8BASb,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAG,WAAU;sCAAmC;;;;;;sCACjD,8OAAC;4BAAI,WAAU;sCACZ,YAAY,iBAAiB,CAAC,GAAG,CAAC,CAAC,SAAS,sBAC3C,8OAAC;oCAEC,WAAU;8CAET;mCAHI;;;;;;;;;;;;;;;;gBASZ,YAAY,MAAM,GAAG,mBACpB,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAG,WAAU;sCAAmC;;;;;;sCACjD,8OAAC;4BAAI,WAAU;sCACZ,YAAY,GAAG,CAAC,CAAC,2BAChB,8OAAC;oCAEC,WAAU;oCACV,SAAS,IAAM,uBAAuB;8CAErC,WAAW,IAAI;mCAJX,WAAW,EAAE;;;;;;;;;;;;;;;;gBAW3B,YAAY,KAAK,kBAChB,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAG,WAAU;sCAAmC;;;;;;sCACjD,8OAAC;4BAAE,WAAU;sCAAmD,YAAY,KAAK;;;;;;;;;;;;;;;;;;IAK3F;IAEA,MAAM,gBAAgB,CAAC,EAAE,MAAM,EAAE,OAAO,EAAO;QAC7C,IAAI,UAAU,WAAW,QAAQ,MAAM,EAAE;YACvC,MAAM,OAAO,OAAO,CAAC,EAAE,CAAC,OAAO;YAC/B,qBACE,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAE,WAAU;kCAAiB,KAAK,IAAI;;;;;;kCACvC,8OAAC;wBAAE,WAAU;kCAAyB,KAAK,YAAY;;;;;;kCACvD,8OAAC;wBAAE,WAAU;;4BACV,eAAe,uBACd,CAAC,kBAAkB,EAAE,KAAK,eAAe,CAAC,WAAW,EAAE,KAAK,mBAAmB,EAAE;4BAClF,eAAe,0BACd,CAAC,kBAAkB,EAAE,KAAK,eAAe,CAAC,cAAc,EAAE,KAAK,oBAAoB,EAAE;;;;;;;;;;;;;QAI/F;QACA,OAAO;IACT;IAEA,MAAM,uBAAuB;QAC3B,qBACE,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAG,WAAU;0CAAyB;;;;;;0CACvC,8OAAC;gCACC,SAAS,IAAM,iBAAiB;gCAChC,WAAU;0CACX;;;;;;;;;;;;kCAKH,8OAAC;wBAAI,WAAU;kCACZ,OAAO,OAAO,CAAC,4BAA4B,GAAG,CAC7C,CAAC,CAAC,KAAK,WAAW,iBAChB,8OAAC;gCAAc,WAAU;;kDACvB,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;gDACC,WAAU;gDACV,OAAO;oDAAE,iBAAiB,WAAW,KAAK;gDAAC;0DAE1C,WAAW,IAAI;;;;;;0DAElB,8OAAC;gDACC,WAAU;gDACV,OAAO;oDAAE,OAAO,WAAW,KAAK;gDAAC;0DAEhC,WAAW,KAAK;;;;;;;;;;;;kDAIrB,8OAAC;wCAAE,WAAU;kDAAsB,WAAW,WAAW;;;;;;kDAEzD,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;gDAAG,WAAU;0DAAyC;;;;;;0DAGvD,8OAAC;gDAAG,WAAU;0DACX,WAAW,eAAe,CAAC,GAAG,CAAC,CAAC,MAAM,sBACrC,8OAAC;wDAAe,WAAU;;0EACxB,8OAAC;gEAAK,WAAU;0EAAqB;;;;;;4DACpC;;uDAFM;;;;;;;;;;;;;;;;kDAQf,8OAAC;;0DACC,8OAAC;gDAAG,WAAU;0DAAyC;;;;;;0DAGvD,8OAAC;gDAAI,WAAU;0DACZ,WAAW,QAAQ,CAAC,GAAG,CAAC,CAAC,SAAS,sBACjC,8OAAC;wDAEC,WAAU;wDACV,OAAO;4DAAE,iBAAiB,WAAW,KAAK;wDAAC;kEAE1C;uDAJI;;;;;;;;;;;;;;;;;+BAvCL;;;;;;;;;;kCAqDhB,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAG,WAAU;0CAAmC;;;;;;0CAGjD,8OAAC;gCAAG,WAAU;;kDACZ,8OAAC;;4CAAG;0DACA,8OAAC;0DAAO;;;;;;4CAAuB;;;;;;;kDAGnC,8OAAC;;4CAAG;0DACA,8OAAC;0DAAO;;;;;;4CAAyB;;;;;;;kDAGrC,8OAAC;;4CAAG;0DACA,8OAAC;0DAAO;;;;;;4CAAmB;;;;;;;kDAG/B,8OAAC;;4CAAG;0DACA,8OAAC;0DAAO;;;;;;4CAAqB;;;;;;;kDAGjC,8OAAC;;4CAAG;0DACA,8OAAC;0DAAO;;;;;;4CAAoB;;;;;;;;;;;;;;;;;;;kCAMpC,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BACC,SAAS,IAAM,iBAAiB;4BAChC,WAAU;sCACX;;;;;;;;;;;;;;;;;;;;;;IAOX;IAEA,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BAEb,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAG,WAAU;sCAAwC;;;;;;sCAGtD,8OAAC;4BAAE,WAAU;sCAAgB;;;;;;;;;;;;8BAO/B,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAI,WAAU;;sDACb,8OAAC,sMAAA,CAAA,SAAM;4CAAC,WAAU;;;;;;sDAClB,8OAAC;4CACC,MAAK;4CACL,aAAY;4CACZ,OAAO;4CACP,UAAU,CAAC,IAAM,cAAc,EAAE,MAAM,CAAC,KAAK;4CAC7C,WAAU;;;;;;;;;;;;8CAId,8OAAC;oCACC,OAAO;oCACP,UAAU,CAAC,IAAM,kBAAkB,EAAE,MAAM,CAAC,KAAK;oCACjD,WAAU;;sDAEV,8OAAC;4CAAO,OAAM;sDAAM;;;;;;sDACpB,8OAAC;4CAAO,OAAM;sDAAW;;;;;;sDACzB,8OAAC;4CAAO,OAAM;sDAAW;;;;;;sDACzB,8OAAC;4CAAO,OAAM;sDAAS;;;;;;sDACvB,8OAAC;4CAAO,OAAM;sDAAS;;;;;;sDACvB,8OAAC;4CAAO,OAAM;sDAAa;;;;;;sDAC3B,8OAAC;4CAAO,OAAM;sDAAQ;;;;;;sDACtB,8OAAC;4CAAO,OAAM;sDAAY;;;;;;;;;;;;8CAG5B,8OAAC;oCACC,OAAO;oCACP,UAAU,CAAC,IAAM,cAAc,EAAE,MAAM,CAAC,KAAK;oCAC7C,WAAU;;sDAEV,8OAAC;4CAAO,OAAM;sDAAM;;;;;;sDACpB,8OAAC;4CAAO,OAAM;sDAAe;;;;;;sDAC7B,8OAAC;4CAAO,OAAM;sDAAiB;;;;;;sDAC/B,8OAAC;4CAAO,OAAM;sDAAa;;;;;;sDAC3B,8OAAC;4CAAO,OAAM;sDAAa;;;;;;sDAC3B,8OAAC;4CAAO,OAAM;sDAAW;;;;;;sDACzB,8OAAC;4CAAO,OAAM;sDAAU;;;;;;sDACxB,8OAAC;4CAAO,OAAM;sDAAY;;;;;;;;;;;;8CAG5B,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CACC,SAAS,IAAM,YAAY;4CAC3B,WAAW,CAAC,8BAA8B,EACxC,aAAa,WACT,2BACA,qCACJ;sDACH;;;;;;sDAGD,8OAAC;4CACC,SAAS,IAAM,YAAY;4CAC3B,WAAW,CAAC,8BAA8B,EACxC,aAAa,YACT,2BACA,qCACJ;sDACH;;;;;;sDAGD,8OAAC;4CACC,SAAS,IAAM,YAAY;4CAC3B,WAAW,CAAC,8BAA8B,EACxC,aAAa,cACT,2BACA,qCACJ;sDACH;;;;;;;;;;;;8CAKH,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CACC,SAAS,IAAM,uBAAuB;4CACtC,WAAU;;8DAEV,8OAAC,kMAAA,CAAA,OAAI;oDAAC,WAAU;;;;;;8DAChB,8OAAC;8DAAK;;;;;;;;;;;;sDAGR,8OAAC;4CACC,SAAS,IAAM,iBAAiB;4CAChC,WAAU;;8DAEV,8OAAC,gMAAA,CAAA,MAAG;oDAAC,WAAU;;;;;;8DACf,8OAAC;8DAAK;;;;;;;;;;;;;;;;;;;;;;;;sCAMZ,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC;gCAAE,WAAU;;oCAAwB;kDAChC,8OAAC;kDAAO;;;;;;oCAAoC;oCAAW;kDAC1D,8OAAC;wCACC,SAAS,IAAM,iBAAiB;wCAChC,WAAU;;0DAEV,8OAAC,gMAAA,CAAA,MAAG;gDAAC,WAAU;;;;;;0DACf,8OAAC;0DAAK;;;;;;;;;;;;oCACE;oCAAI;;;;;;;;;;;;;;;;;;8BAQpB,8OAAC;oBAAI,WAAU;;sCAEb,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC;gCAAI,WAAU;;oCACZ,aAAa,0BACZ;;0DACE,8OAAC;gDAAI,WAAU;;kEACb,8OAAC;wDAAG,WAAU;kEAAwB;;;;;;kEAGtC,8OAAC;wDACC,OAAO;wDACP,UAAU,CAAC,IAAM,cAAc,EAAE,MAAM,CAAC,KAAK;wDAC7C,WAAU;;0EAEV,8OAAC;gEAAO,OAAM;0EAAoB;;;;;;0EAGlC,8OAAC;gEAAO,OAAM;0EAAuB;;;;;;;;;;;;;;;;;;0DAMzC,8OAAC;gDAAI,WAAU;;kEACb,8OAAC,mKAAA,CAAA,sBAAmB;wDAAC,OAAM;wDAAO,QAAO;kEACvC,cAAA,8OAAC,wJAAA,CAAA,eAAY;;8EACX,8OAAC,6JAAA,CAAA,gBAAa;oEAAC,iBAAgB;;;;;;8EAC/B,8OAAC,qJAAA,CAAA,QAAK;oEACJ,MAAK;oEACL,SAAQ;oEACR,QAAQ;wEAAC;wEAAG;qEAAG;oEACf,MAAM,eAAe,sBAAsB,qBAAqB;oEAChE,OAAO;wEAAC;wEAAG;wEAAG;wEAAG;wEAAG;wEAAG;wEAAG;wEAAG;wEAAG;wEAAG;qEAAG;;;;;;8EAExC,8OAAC,qJAAA,CAAA,QAAK;oEACJ,MAAK;oEACL,SAAQ;oEACR,QAAQ;wEAAC;wEAAG;qEAAG;oEACf,MAAM,eAAe,sBAAsB,yBAAyB;oEACpE,OAAO;wEAAC;wEAAG;wEAAG;wEAAG;wEAAG;wEAAG;wEAAG;wEAAG;wEAAG;wEAAG;qEAAG;;;;;;8EAExC,8OAAC,uJAAA,CAAA,UAAO;oEAAC,uBAAS,8OAAC;;;;;;;;;;8EACnB,8OAAC,uJAAA,CAAA,UAAO;oEAAC,MAAM;8EACZ,gBAAgB,GAAG,CAAC,CAAC,OAAO,sBAC3B,8OAAC,oJAAA,CAAA,OAAI;4EAEH,MAAM,iBAAiB,MAAM,QAAQ;2EADhC,CAAC,KAAK,EAAE,OAAO;;;;;;;;;;;;;;;;;;;;;kEAS9B,8OAAC;wDAAI,WAAU;kEACZ,iBAAiB;;;;;;kEAEpB,8OAAC;wDAAI,WAAU;kEACZ,iBAAiB;;;;;;kEAEpB,8OAAC;wDAAI,WAAU;kEACZ,iBAAiB;;;;;;kEAEpB,8OAAC;wDAAI,WAAU;kEACZ,iBAAiB;;;;;;;;;;;;;;oCAMzB,aAAa,6BACZ,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;gDAAG,WAAU;0DAAwB;;;;;;0DAItC,8OAAC;gDAAI,WAAU;;kEACb,8OAAC;;0EACC,8OAAC;gEAAG,WAAU;0EAAmB;;;;;;0EAGjC,8OAAC;gEAAI,WAAU;0EACb,cAAA,8OAAC,mKAAA,CAAA,sBAAmB;oEAAC,OAAM;oEAAO,QAAO;8EACvC,cAAA,8OAAC,oJAAA,CAAA,WAAQ;;0FACP,8OAAC,+IAAA,CAAA,MAAG;gFACF,MAAM,OAAO,OAAO,CAClB,qBAAqB,MAAM,CAAC,CAAC,KAAK;oFAChC,GAAG,CAAC,EAAE,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,QAAQ,CAAC,IAAI,CAAC,IAAI;oFAC3C,OAAO;gFACT,GAAG,CAAC,IACJ,GAAG,CAAC,CAAC,CAAC,KAAK,MAAM,GAAK,CAAC;wFAAE,MAAM;wFAAK;oFAAM,CAAC;gFAC7C,IAAG;gFACH,IAAG;gFACH,aAAa;gFACb,SAAQ;gFACR,OAAO,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,GACvB,GAAG,KAAK,EAAE,EAAE,CAAC,UAAU,GAAG,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC;0FAG1C,OAAO,IAAI,CACV,qBAAqB,MAAM,CAAC,CAAC,KAAK;oFAChC,GAAG,CAAC,EAAE,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,QAAQ,CAAC,IAAI,CAAC,IAAI;oFAC3C,OAAO;gFACT,GAAG,CAAC,IACJ,GAAG,CAAC,CAAC,UAAU,sBACf,8OAAC,oJAAA,CAAA,OAAI;wFAEH,MAAM,iBAAiB;uFADlB,CAAC,KAAK,EAAE,OAAO;;;;;;;;;;0FAK1B,8OAAC,uJAAA,CAAA,UAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;kEAMhB,8OAAC;;0EACC,8OAAC;gEAAG,WAAU;0EAAmB;;;;;;0EAGjC,8OAAC;gEAAI,WAAU;0EACb,cAAA,8OAAC,mKAAA,CAAA,sBAAmB;oEAAC,OAAM;oEAAO,QAAO;8EACvC,cAAA,8OAAC,oJAAA,CAAA,WAAQ;wEACP,MAAM,OAAO,OAAO,CAClB,qBAAqB,MAAM,CAAC,CAAC,KAAK;4EAChC,IAAI,CAAC,GAAG,CAAC,EAAE,eAAe,CAAC,EAAE;gFAC3B,GAAG,CAAC,EAAE,eAAe,CAAC,GAAG;oFACvB,OAAO;oFACP,OAAO;gFACT;4EACF;4EACA,GAAG,CAAC,EAAE,eAAe,CAAC,CAAC,KAAK,IAAI,EAAE,eAAe;4EACjD,GAAG,CAAC,EAAE,eAAe,CAAC,CAAC,KAAK,IAAI;4EAChC,OAAO;wEACT,GAAG,CAAC,IACJ,GAAG,CAAC,CAAC,CAAC,KAAK,MAAM,GAAK,CAAC;gFACvB,MAAM,IAAI,OAAO,CAAC,KAAK;gFACvB,OAAO,KAAK,KAAK,CAAC,MAAM,KAAK,GAAG,MAAM,KAAK;4EAC7C,CAAC;;0FAED,8OAAC,6JAAA,CAAA,gBAAa;gFAAC,iBAAgB;;;;;;0FAC/B,8OAAC,qJAAA,CAAA,QAAK;gFAAC,SAAQ;;;;;;0FACf,8OAAC,qJAAA,CAAA,QAAK;;;;;0FACN,8OAAC,uJAAA,CAAA,UAAO;;;;;0FACR,8OAAC,mJAAA,CAAA,MAAG;gFAAC,SAAQ;gFAAQ,MAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oCASvC,aAAa,2BAAa,8OAAC;;;;;;;;;;;;;;;;sCAKhC,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAI,WAAU;8CACb,cAAA,8OAAC;wCAAG,WAAU;;4CAAwB;4CACrB,qBAAqB,MAAM;4CAAC;;;;;;;;;;;;8CAK/C,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CAAG,WAAU;sDAAmB;;;;;;sDACjC,8OAAC;4CAAI,WAAU;;8DACb,8OAAC;;sEACC,8OAAC;4DAAK,WAAU;sEAAgB;;;;;;sEAChC,8OAAC;4DAAK,WAAU;sEAEZ,qBAAqB,MAAM,CACzB,CAAC,IAAM,EAAE,eAAe,KAAK,gBAC7B,MAAM;;;;;;;;;;;;8DAId,8OAAC;;sEACC,8OAAC;4DAAK,WAAU;sEAAgB;;;;;;sEAChC,8OAAC;4DAAK,WAAU;sEAEZ,qBAAqB,MAAM,CAAC,CAAC,IAAM,EAAE,eAAe,IAAI,GACrD,MAAM;;;;;;;;;;;;8DAIf,8OAAC;;sEACC,8OAAC;4DAAK,WAAU;sEAAgB;;;;;;sEAChC,8OAAC;4DAAK,WAAU;sEAEZ,qBAAqB,MAAM,CACzB,CAAC,IAAM,EAAE,mBAAmB,IAAI,GAChC,MAAM;;;;;;;;;;;;8DAId,8OAAC;;sEACC,8OAAC;4DAAK,WAAU;sEAAgB;;;;;;sEAChC,8OAAC;4DAAK,WAAU;sEAEZ,qBAAqB,MAAM,CACzB,CAAC,IAAM,EAAE,eAAe,IAAI,KAAK,EAAE,mBAAmB,IAAI,GAC1D,MAAM;;;;;;;;;;;;;;;;;;;;;;;;8CAOlB,8OAAC;oCAAI,WAAU;8CACZ,qBAAqB,GAAG,CAAC,CAAC,4BACzB,8OAAC;4CAEC,WAAU;4CACV,SAAS,IAAM,uBAAuB;;8DAEtC,8OAAC;oDAAI,WAAU;;sEACb,8OAAC;4DAAI,WAAU;;8EACb,8OAAC;oEACC,WAAU;oEACV,OAAO;wEACL,iBACE,aAAa,YAAY,eAAe,IAAI;oEAChD;8EAEC,YAAY,YAAY,eAAe;;;;;;8EAE1C,8OAAC;oEAAI,WAAU;;sFACb,8OAAC;4EAAG,WAAU;sFAAe,YAAY,IAAI;;;;;;sFAC7C,8OAAC;4EAAI,WAAU;;8FACb,8OAAC;oFAAE,WAAU;8FACV,YAAY,YAAY;;;;;;8FAE3B,8OAAC;oFACC,WAAU;oFACV,OAAO;wFACL,iBAAiB,aACf,YAAY,eAAe;oFAE/B;8FAGE,0BAA0B,CACxB,YAAY,eAAe,CAC5B,EAAE;;;;;;;;;;;;;;;;;;;;;;;;sEAMb,8OAAC;4DAAI,WAAU;;8EACb,8OAAC;oEAAI,WAAU;;sFACb,8OAAC;4EAAI,WAAU;;gFAAgB;gFACjB,YAAY,eAAe;gFAAC;;;;;;;sFAE1C,8OAAC;4EAAI,WAAU;;gFAAgB;gFACnB,YAAY,mBAAmB;gFAAC;;;;;;;;;;;;;8EAG9C,8OAAC;oEACC,SAAS,CAAC;wEACR,EAAE,eAAe;wEACjB,sBAAsB;oEACxB;oEACA,WAAU;oEACV,OAAM;8EAEN,cAAA,8OAAC,2MAAA,CAAA,OAAI;wEAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;;8DAKtB,8OAAC;oDAAI,WAAU;;wDACZ,YAAY,aAAa,CACvB,KAAK,CAAC,GAAG,GACT,GAAG,CAAC,CAAC,UAAU,sBACd,8OAAC;gEAEC,WAAU;0EAET;+DAHI;;;;;wDAMV,YAAY,aAAa,CAAC,MAAM,GAAG,mBAClC,8OAAC;4DAAK,WAAU;;gEAAsD;gEAClE,YAAY,aAAa,CAAC,MAAM,GAAG;gEAAE;;;;;;;;;;;;;;2CAzExC,YAAY,EAAE;;;;;;;;;;;;;;;;;;;;;;gBAoF5B,uBACC,CAAC,uBACD,CAAC,sCACC,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAG,WAAU;kDAAwB;;;;;;kDACtC,8OAAC;wCACC,SAAS,IAAM,uBAAuB;wCACtC,WAAU;kDACX;;;;;;;;;;;;0CAIH,8OAAC;gCAAmB,aAAa;;;;;;;;;;;;;;;;;gBAMxC,CAAC,uBAAuB,oBAAoB,mBAC3C,8OAAC;oBACC,aACE,uBACI,uBAAuB,YACvB;oBAEN,QAAQ;oBACR,UAAU;;;;;;gBAKb,+BAAiB,8OAAC;;;;;gBAGlB,qCACC,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAG,WAAU;0CAA6B;;;;;;0CAC3C,8OAAC;gCAAE,WAAU;;oCAAqB;oCACA;kDAChC,8OAAC;kDAAQ,oBAAoB,IAAI;;;;;;oCAAU;;;;;;;0CAG7C,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCACC,SAAS,IAAM,uBAAuB;wCACtC,WAAU;kDACX;;;;;;kDAGD,8OAAC;wCACC,SAAS;wCACT,WAAU;kDACX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUjB;uCAEe","debugId":null}}]
}